#!/usr/local/bin/lngrd

"" |@suite
2 |@stderr
1 |@color
catch
\
  if (@query "NO_COLOR")
  \
    0 |@color
  /
/
1 |@persistence
catch
\
  if (@query "NO_PERSISTENCE")
  \
    0 |@persistence
  /
/

<
  argument 1 |$status
  argument 2 |$color

  if @color
  \
    (@write @stderr "\x1b[7;")
    (@write @stderr (@serialize $color))
    (@write @stderr "m ")
    (@write @stderr $status)
    (@write @stderr " \x1b[0m\n")
  /
  else
  \
    (@write @stderr "[")
    (@write @stderr $status)
    (@write @stderr "]\n")
  /
> |@writeStatus

<
  argument 1 |$header
  argument 2 |$value

  if @color
  \
    (@write @stderr "\x1b[1m")
    (@write @stderr $header)
    (@write @stderr ":\x1b[0m\n")
    (@write @stderr $value)
    (@write @stderr "\n")
  /
  else
  \
    (@write @stderr $header)
    (@write @stderr ":\n")
    (@write @stderr $value)
    (@write @stderr "\n")
  /
> |@writeDetail

<
  argument 1 |$do
  argument 2 |$expected

  0 |$clear
  catch \ ($do) |$returned 1 |$clear / |$thrown

  if (@not $clear)
  \
    (@writeStatus "FAIL" 31)
    (@writeDetail "Reason" "an unexpected error was thrown")
    (@writeDetail "Suite" @suite)
    (@writeDetail "Source" (@serialize $do))
    (@writeDetail "Thrown" (@serialize $thrown))
    (@exit 1)
  /

  if (@not (@equals $returned $expected))
  \
    (@writeStatus "FAIL" 31)
    (@writeDetail "Reason" "an unexpected value was returned")
    (@writeDetail "Suite" @suite)
    (@writeDetail "Source" (@serialize $do))
    (@writeDetail "Actual" (@serialize $returned))
    (@writeDetail "Expected" (@serialize $expected))
    (@exit 1)
  /
> |@returns

<
  argument 1 |$do
  argument 2 |$expected

  0 |$clear
  catch \ ($do) |$returned 1 |$clear / |$thrown

  if $clear
  \
    (@writeStatus "FAIL" 31)
    (@writeDetail "Reason" "an expected error was not thrown")
    (@writeDetail "Suite" @suite)
    (@writeDetail "Source" (@serialize $do))
    (@writeDetail "Returned" (@serialize $returned))
    (@exit 1)
  /

  if (@not (@equals $thrown $expected))
  \
    (@writeStatus "FAIL" 31)
    (@writeDetail "Reason" "an unexpected error was thrown")
    (@writeDetail "Suite" @suite)
    (@writeDetail "Source" (@serialize $do))
    (@writeDetail "Actual" (@serialize $thrown))
    (@writeDetail "Expected" (@serialize $expected))
    (@exit 1)
  /
> |@throws

<
  argument 1 |$source

  0 |$clear
  catch \ (@evaluate $source) |$returned 1 |$clear / |$thrown

  if $clear
  \
    (@writeStatus "FAIL" 31)
    (@writeDetail "Reason" "an expected error was not thrown")
    (@writeDetail "Suite" @suite)
    (@writeDetail "Source" (@serialize $source))
    (@writeDetail "Returned" (@serialize $returned))
    (@exit 1)
  /

  "lex error" |$expected

  if (@not (@equals $thrown $expected))
  \
    (@writeStatus "FAIL" 31)
    (@writeDetail "Reason" "an unexpected error was thrown")
    (@writeDetail "Suite" @suite)
    (@writeDetail "Source" (@serialize $source))
    (@writeDetail "Actual" (@serialize $thrown))
    (@writeDetail "Expected" (@serialize $expected))
    (@exit 1)
  /
> |@lexFails

<
  argument 1 |$source

  0 |$clear
  catch \ (@evaluate $source) |$returned 1 |$clear / |$thrown

  if $clear
  \
    (@writeStatus "FAIL" 31)
    (@writeDetail "Reason" "an expected error was not thrown")
    (@writeDetail "Suite" @suite)
    (@writeDetail "Source" (@serialize $source))
    (@writeDetail "Returned" (@serialize $returned))
    (@exit 1)
  /

  "parse error" |$expected

  if (@not (@equals $thrown $expected))
  \
    (@writeStatus "FAIL" 31)
    (@writeDetail "Reason" "an unexpected error was thrown")
    (@writeDetail "Suite" @suite)
    (@writeDetail "Source" (@serialize $source))
    (@writeDetail "Actual" (@serialize $thrown))
    (@writeDetail "Expected" (@serialize $expected))
    (@exit 1)
  /
> |@parseFails

catch
\
  \
    "expression/number" |@suite

    (@returns <0> 0)
    (@returns <1> 1)
    (@returns <-1> -1)
    (@returns <+1> 1)
    (@returns <100> 100)
    (@returns <-100> -100)
    (@returns <+100> 100)
    (@returns <2147483647> 2147483647)
    (@returns <-2147483647> -2147483647)
    (@returns <+2147483647> 2147483647)
    (@returns <000000000000000000000000000000000000000000000000002147483647> 2147483647)
    (@lexFails "-")
    (@lexFails "+")
    (@parseFails "2147483648")
    (@parseFails "-2147483648")
    (@parseFails "+2147483648")
    (@lexFails "--100")
    (@lexFails "++100")
    (@lexFails "+junk")
  /

  \
    "expression/string" |@suite

    (@returns <""> "")
    (@returns <"text"> "text")
    (@returns <(@measure "\\\"\t\r\n")> 5)
    (@returns <(@measure "\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f")> 16)
    (@returns <(@measure "\x00\x10\x20\x30\x40\x50\x60\x70\x80\x90\xa0\xb0\xc0\xd0\xe0\xf0")> 16)
    (@returns <(@measure "\x00\x11\x22\x33\x44\x55\x66\x77\x88\x99\xaa\xbb\xcc\xdd\xee\xff")> 16)
    (@returns <"line 1\nline 2\nline 3"> "line 1\nline 2\nline 3")
    (@returns <"line 1\x0aline 2\x0aline 3"> "line 1\nline 2\nline 3")
    (@returns <"\x74\x65\x78\x74"> "text")
    (@returns <"\x7c123\x7c"> "|123|")
    (@returns <"\x7cabc\x7c"> "|abc|")
    (@lexFails "\"")
    (@parseFails "\"\\xFF\"")
    (@parseFails "\"\\z\"")
    (@parseFails "\"\\x\"")
    (@parseFails "\"\\x0\"")
    (@parseFails "\"\\x0z\"")
    (@parseFails "\"\\xz0\"")
    (@lexFails "\"junk")
  /

  \
    "expression/list" |@suite

    (@returns <[]> [])
    (@returns <[1 2 3]> [1 2 3])
    (@returns <["a" "b" "c"]> ["a" "b" "c"])
    (@returns <[<1> <2> <3>]> [<1> <2> <3>])
    (@returns <[[0 0 0] ["" "" ""] [<> <> <>] [[] [] []]]> [[0 0 0] ["" "" ""] [<> <> <>] [[] [] []]])
    (@returns <[1 2 3 4 5 6 7 8 9 10]> [1 2 3 4 5 6 7 8 9 10])
    (@returns <[[[[[[[[[["x"]]]]]]]]]]> [[[[[[[[[["x"]]]]]]]]]])
    (@parseFails "[")
    (@parseFails "]")
    (@parseFails "[1")
    (@parseFails "[1 2")
    (@parseFails "[$variable]")
    (@parseFails "[0 |$variable]")
    (@parseFails "[%$variable]")
    (@parseFails "[(@add 100 200)]")
    (@parseFails "[if 0 \\ /]")
    (@parseFails "[while 0 \\ /]")
    (@parseFails "[catch \\ /]")
    (@parseFails "[throw \"error\"]")
    (@parseFails "[argument 1]")
    (@parseFails "[\\ /]")
    (@lexFails "[junk")
  /

  \
    "expression/function" |@suite

    (@returns <<>> <>)
    (@returns <<throw "error">> <throw "error">)
    (@returns <@add> @add)
    (@returns <@add> <(@add argument 1 argument 2)>)
    (@returns <(@equals <(@add argument 1 argument 2)> <
  (@add argument 1 argument 2)
>)> 0)
    (@returns <(@equals <
  (@add argument 1 argument 2)
> <
  # comment
  (@add argument 1 argument 2)
>)> 0)
    (@returns <@subtract> <(@subtract argument 1 argument 2)>)
    (@returns <@multiply> <(@multiply argument 1 argument 2)>)
    (@returns <@divide> <(@divide argument 1 argument 2)>)
    (@returns <@modulo> <(@modulo argument 1 argument 2)>)
    (@returns <@increment> <(@increment argument 1)>)
    (@returns <@decrement> <(@decrement argument 1)>)
    (@returns <@and> <(@and argument 1 argument 2)>)
    (@returns <@or> <(@or argument 1 argument 2)>)
    (@returns <@not> <(@not argument 1)>)
    (@returns <@precedes> <(@precedes argument 1 argument 2)>)
    (@returns <@succeeds> <(@succeeds argument 1 argument 2)>)
    (@returns <@equals> <(@equals argument 1 argument 2)>)
    (@returns <@measure> <(@measure argument 1)>)
    (@returns <@slice> <(@slice argument 1 argument 2 argument 3)>)
    (@returns <@merge> <(@merge argument 1 argument 2)>)
    (@returns <@read> <(@read argument 1 argument 2)>)
    (@returns <@write> <(@write argument 1 argument 2)>)
    (@returns <@delete> <(@delete argument 1)>)
    (@returns <@query> <(@query argument 1)>)
    (@returns <@exit> <(@exit argument 1)>)
    (@returns <@serialize> <(@serialize argument 1)>)
    (@returns <@deserialize> <(@deserialize argument 1)>)
    (@returns <@classify> <(@classify argument 1)>)
    (@parseFails "<")
    (@parseFails ">")
    (@parseFails "<0")
    (@parseFails "<0 |$variable")
    (@lexFails "<junk")
  /

  \
    "expression/lookup" |@suite

    (@returns <"text" |$variable $variable> "text")
    (@returns <"text" |$variable |$clone $clone> "text")
    (@returns <"text" |$variable |$variable $variable> "text")
    (@returns <0 |$number $number> 0)
    (@returns <"" |$string $string> "")
    (@returns <[] |$list $list> [])
    (@returns <<> |$function $function> <>)
    (@returns <0 |$0 1 |$1 2 |$2 %$0 %$1 $2> 2)
    (@returns <0 |$0 1 |$1 2 |$2 %$0 %$2 $1> 1)
    (@returns <0 |$0 1 |$1 2 |$2 %$1 %$2 $0> 0)
    (@returns <0 |$0 4 |$4 8 |$8 %$0 %$4 $8> 8)
    (@returns <0 |$0 4 |$4 8 |$8 %$0 %$8 $4> 4)
    (@returns <0 |$0 4 |$4 8 |$8 %$4 %$8 $0> 0)
    (@returns <0 |$0 8 |$8 32 |$32 %$0 %$8 $32> 32)
    (@returns <0 |$0 8 |$8 32 |$32 %$0 %$32 $8> 8)
    (@returns <0 |$0 8 |$8 32 |$32 %$8 %$32 $0> 0)
    (@returns <"x" |$0 |$1 |$2 |$3 |$4 |$5 |$6 |$7 |$8 |$9 $0> "x")
    (@returns <"x" |$0 |$1 |$2 |$3 |$4 |$5 |$6 |$7 |$8 |$9 $9> "x")
    (@returns <"x" |$0 |$0 |$0 |$0 |$0 |$0 |$0 |$0 |$0 |$0 $0> "x")
    (@returns <0 |$0 1 |$1 2 |$2 3 |$3 4 |$4 5 |$5 6 |$6 7 |$7 8 |$8 9 |$9 $0> 0)
    (@returns <0 |$0 1 |$1 2 |$2 3 |$3 4 |$4 5 |$5 6 |$6 7 |$7 8 |$8 9 |$9 $9> 9)
    (@lexFails "$")
    (@lexFails "$\"variable")
    (@parseFails "$\"\\z\"")
    (@parseFails "|$\"\\z\"")
    (@parseFails "%$\"\\z\"")
  /

  \
    "expression/assign" |@suite

    (@returns <"text" |$variable> "text")
    (@returns <"text" |$variable |$clone> "text")
    (@returns <"text" |$variable |$variable> "text")
    (@returns <0 |$number> 0)
    (@returns <"" |$string> "")
    (@returns <[] |$list> [])
    (@returns <<> |$function> <>)
    (@returns <|$variable> "")
    (@returns <@add |$a ($a 0 1)> 1)
    (@returns <"text" |$"variable" $"variable"> "text")
    (@returns <"text" |$"variable" $variable> "text")
    (@returns <"text" |$variable $"variable"> "text")
    (@returns <"text" |$"" $""> "text")
    (@returns <"text" |$"\"special\"" $"\"special\""> "text")
    (@returns <<> |$add $add> <>)
    (@returns <<> |$add @add> @add)
    (@returns <@add |$saved <"x"> |@add (@add) |$result $saved |@add $result> "x")
    (@lexFails "|")
    (@lexFails "|variable")
    (@lexFails "|\"variable\"")
    (@lexFails "|\"variable")
    (@lexFails "|$")
    (@lexFails "|$\"variable")
    (@lexFails "|!variable")
  /

  \
    "expression/unassign" |@suite

    (@returns <%$variable> "")
    (@returns <0 |$number %$number> "")
    (@returns <"" |$string %$string> "")
    (@returns <[] |$list %$list> "")
    (@returns <<> |$function %$function> "")
    (@throws <"text" |$variable %$variable $variable> "absent variable")
    (@throws <"text" |$"\"special\"" %$"\"special\"" $"\"special\""> "absent variable")
    (@lexFails "%")
    (@lexFails "%variable")
    (@lexFails "%\"variable\"")
    (@lexFails "%\"variable")
    (@lexFails "%$")
    (@lexFails "%$\"variable")
    (@lexFails "%!variable")
  /

  \
    "expression/invoke" |@suite

    (@returns <(<>)> "")
    (@returns <(<0>)> 0)
    (@returns <(<"">)> "")
    (@returns <(<[]>)> [])
    (@returns <(<<>>)> <>)
    (@throws <(<throw "error">)> "error")
    (@returns <<"x"> |$f ($f) ($f) ($f)> "x")
    (@returns <(catch \ throw <"x"> /)> "x")
    (@returns <(@add 0 1)> 1)
    (@returns <(@add 0 1) (@add 0 2) (@add 0 3)> 3)
    (@returns <(@add 1 (@add 2 (@add 3 4)))> 10)
    (@returns <(@add 0 1 "extra")> 1)
    (@returns <0 |$n (<1 |$n>) (<2 |$n>) (<3 |$n>) $n> 0)
    (@returns <0 |@n (<1 |@n>) (<2 |@n>) (<3 |@n>) @n |$n %@n $n> 3)
    (@returns <0 |$n (<> (<1 |$n>) (<2 |$n>) (<3 |$n>)) $n> 0)
    (@returns <0 |@n (<> (<1 |@n>) (<2 |@n>) (<3 |@n>)) @n |$n %@n $n> 3)
    (@returns <0 |$n (<> (<> (<1 |$n>) (<2 |$n>) (<3 |$n>))) $n> 0)
    (@returns <0 |@n (<> (<> (<1 |@n>) (<2 |@n>) (<3 |@n>))) @n |$n %@n $n> 3)
    (@throws <"x" |$var (<$var>)> "absent variable")
    (@throws <(<"x" |$var>) $var> "absent variable")
    (@returns <"x" |@var (<@var>) @var |$var %@var $var> "x")
    (@returns <(<"x" |@var>) @var |$var %@var $var> "x")
    (@throws <(@write 2 "text" $invalid)> "absent variable")
    (@parseFails "(")
    (@parseFails ")")
    (@parseFails "(@add")
    (@parseFails "(@add 0")
    (@lexFails "(@add junk")
  /

  \
    "expression/branch" |@suite

    (@returns <if 0 "x"> "")
    (@returns <if "" "x"> "")
    (@returns <if [] "x"> "")
    (@returns <if [ ] "x"> "")
    (@returns <if <> "x"> "")
    (@returns <if < > "x"> "")
    (@returns <if 1 "x"> "x")
    (@returns <if -1 "x"> "x")
    (@returns <if 100 "x"> "x")
    (@returns <if -100 "x"> "x")
    (@returns <if "x" "x"> "x")
    (@returns <if "0" "x"> "x")
    (@returns <if "1" "x"> "x")
    (@returns <if [""] "x"> "x")
    (@returns <if ["x"] "x"> "x")
    (@returns <if <""> "x"> "x")
    (@returns <if <"x"> "x"> "x")
    (@returns <if @write "x"> "x")
    (@returns <if "1" if "2" "x"> "x")
    (@returns <if "1" if "" "x"> "")
    (@returns <if "" if "2" "x"> "")
    (@returns <if "" if "" "x"> "")
    (@returns <if 1 "a" else "b"> "a")
    (@returns <if 0 "a" else "b"> "b")
    (@returns <if 1 "a" else if 1 "b"> "a")
    (@returns <if 0 "a" else if 1 "b"> "b")
    (@returns <if 1 "a" else if 1 "b" else "c"> "a")
    (@returns <if 0 "a" else if 1 "b" else "c"> "b")
    (@returns <if 0 "a" else if 0 "b" else "c"> "c")
    (@returns <0 |$i if 0 \ (@add $i 1) |$i / if 0 \ (@add $i 1) |$i / $i> 0)
    (@returns <0 |$i if 0 \ (@add $i 1) |$i / if 1 \ (@add $i 1) |$i / $i> 1)
    (@returns <0 |$i if 1 \ (@add $i 1) |$i / if 0 \ (@add $i 1) |$i / $i> 1)
    (@returns <0 |$i if 1 \ (@add $i 1) |$i / if 1 \ (@add $i 1) |$i / $i> 2)
    (@returns <0 |$i if 0 \ (@add $i 1) |$i / else if 0 \ (@add $i 1) |$i / else \ (@add $i 1) |$i / $i> 1)
    (@returns <0 |$i if 0 \ (@add $i 1) |$i / else if 1 \ (@add $i 1) |$i / else \ (@add $i 1) |$i / $i> 1)
    (@returns <0 |$i if 1 \ (@add $i 1) |$i / else if 0 \ (@add $i 1) |$i / else \ (@add $i 1) |$i / $i> 1)
    (@returns <0 |$i if 1 \ (@add $i 1) |$i / else if 1 \ (@add $i 1) |$i / else \ (@add $i 1) |$i / $i> 1)
    (@parseFails "if")
    (@parseFails "if ")
    (@parseFails "if 0")
    (@parseFails "if 0 ")
    (@returns <(@evaluate "if 0 0")> "")
    (@returns <(@evaluate "if 0 0 ")> "")
    (@parseFails "if 0 0 else")
    (@parseFails "if 0 0 else ")
    (@returns <(@evaluate "if 0 0 else 0")> 0)
    (@returns <(@evaluate "if 0 0 else 0 ")> 0)
    (@parseFails "if 0 0 else if")
    (@parseFails "if 0 0 else if ")
    (@parseFails "if 0 0 else if 0")
    (@parseFails "if 0 0 else if 0 ")
    (@returns <(@evaluate "if 0 0 else if 0 0")> "")
    (@returns <(@evaluate "if 0 0 else if 0 0 ")> "")
    (@parseFails "if 0 0 else if 0 0 else")
    (@parseFails "if 0 0 else if 0 0 else ")
    (@returns <(@evaluate "if 0 0 else if 0 0 else 0")> 0)
    (@returns <(@evaluate "if 0 0 else if 0 0 else 0 ")> 0)
    (@parseFails "else")
    (@parseFails "else if")
    (@lexFails "if junk")
    (@lexFails "if 0 0 else junk")
    (@parseFails "if 0 0 else else")
  /

  \
    "expression/loop" |@suite

    (@returns <while 0 \ /> "")
    (@returns <while "" \ /> "")
    (@returns <while [] \ /> "")
    (@returns <while <> \ /> "")
    (@returns <while < > \ /> "")
    (@throws <while 1 \ throw "x" /> "x")
    (@throws <while -1 \ throw "x" /> "x")
    (@throws <while 100 \ throw "x" /> "x")
    (@throws <while -100 \ throw "x" /> "x")
    (@throws <while "x" \ throw "x" /> "x")
    (@throws <while "0" \ throw "x" /> "x")
    (@throws <while "1" \ throw "x" /> "x")
    (@throws <while [""] \ throw "x" /> "x")
    (@throws <while ["x"]\ throw "x" /> "x")
    (@throws <while <""> \ throw "x" /> "x")
    (@throws <while <"x">\ throw "x" /> "x")
    (@throws <while @write \ throw "x" /> "x")
    (@returns <"x" |$test while $test \ "" |$test /> "")
    (@returns <"x" |$test while $test \ "" |$test / $test> "")
    (@returns <0 |$i while (@precedes $i 100) \ (@add $i 1) |$i /> "")
    (@returns <0 |$i while (@precedes $i 100) \ (@add $i 1) |$i / $i> 100)
    (@parseFails "while")
    (@parseFails "while \"\"")
    (@lexFails "while junk")
  /

  \
    "expression/catch" |@suite

    (@returns <catch \ /> "")
    (@returns <catch \ 0 /> "")
    (@returns <catch \ "" /> "")
    (@returns <catch \ [] /> "")
    (@returns <catch \ <> /> "")
    (@returns <catch \ $missing /> "absent variable")
    (@parseFails "catch")
    (@lexFails "catch junk")
  /

  \
    "expression/throw" |@suite

    (@throws <throw "error"> "error")
    (@throws <throw 0> 0)
    (@throws <throw ""> "")
    (@throws <throw []> [])
    (@throws <throw <>> <>)
    (@returns <catch \ throw "error" /> "error")
    (@returns <(catch \ throw @add / 0 1)> 1)
    (@throws <throw throw "error"> "error")
    (@parseFails "throw")
    (@lexFails "throw junk")
  /

  \
    "expression/argument" |@suite

    (@returns <(<argument 1> "a" "b" "c")> "a")
    (@returns <(<argument 2> "a" "b" "c")> "b")
    (@returns <(<argument 3> "a" "b" "c")> "c")
    (@returns <(<argument 1> 0)> 0)
    (@returns <(<argument 1> "")> "")
    (@returns <(<argument 1> [])> [])
    (@returns <(<argument 1> <>)> <>)
    (@returns <<(@increment argument 1)> |$inc ($inc 0) |$n ($inc $n) |$n ($inc $n)> 3)
    (@returns <<(@merge argument 1 "!")> |$bold ($bold "x")> "x!")
    (@returns <(<argument 1> "x")> "x")
    (@returns <(<(@merge argument 1 (@merge argument 1 argument 1))> "x")> "xxx")
    (@returns <(<argument 1 |$arg (@merge $arg "!")> "x")> "x!")
    (@throws <<
  argument 1 |$self
  argument 2 |$i
  (@precedes $i 1000) |$cont
  if $cont
    ($self $self (@increment $i))
  if (@not $cont)
    throw $i
> |$recurse
($recurse $recurse 1)
> 1000)
    (@throws <(<argument 0> "a" "b" "c")> "absent argument")
    (@throws <(<argument 4> "a" "b" "c")> "absent argument")
    (@throws <argument 1> "absent argument")
    (@throws <(<argument 1>)> "absent argument")
    (@throws <(<argument 1> "x") argument 1> "absent argument")
    (@throws <argument ""> "alien argument")
    (@throws <argument []> "alien argument")
    (@throws <argument <>> "alien argument")
    (@parseFails "argument")
    (@lexFails "argument junk")
  /

  \
    "expression/group" |@suite

    (@returns <\ /> "")
    (@returns <\ "a" /> "a")
    (@returns <\ "a" "b" "c" /> "c")
    (@returns <\ 0 /> 0)
    (@returns <\ "" /> "")
    (@returns <\ [] /> [])
    (@returns <\ <> /> <>)
    (@parseFails "\\")
    (@parseFails "/")
    (@parseFails "\\ \"a\"")
    (@parseFails "\\ \"a\" \"b\"")
    (@lexFails "\\ junk")
  /

  \
    "built-in/add" |@suite

    (@returns <(@add 25 75)> 100)
    (@returns <(@add 75 25)> 100)
    (@returns <(@add 0 0)> 0)
    (@returns <(@add 0 1)> 1)
    (@returns <(@add 1 0)> 1)
    (@returns <(@add 1 1)> 2)
    (@returns <(@add -1 -1)> -2)
    (@returns <(@add -1 1)> 0)
    (@returns <(@add 1 -1)> 0)
    (@returns <(@add 2147483647 0)> 2147483647)
    (@returns <(@add -2147483647 0)> -2147483647)
    (@throws <(@add 2147483647 1)> "arithmetic error")
    (@throws <(@add 1 2147483647)> "arithmetic error")
    (@throws <(@add 2147483647 2147483647)> "arithmetic error")
    (@throws <(@add -2147483647 -1)> "arithmetic error")
    (@throws <(@add -1 -2147483647)> "arithmetic error")
    (@throws <(@add -2147483647 -2147483647)> "arithmetic error")
    (@throws <(@add)> "absent argument")
    (@throws <(@add 0)> "absent argument")
    (@throws <(@add 0 "")> "alien argument")
    (@throws <(@add 0 [])> "alien argument")
    (@throws <(@add 0 <>)> "alien argument")
    (@throws <(@add "")> "alien argument")
    (@throws <(@add "" 0)> "alien argument")
    (@throws <(@add "" "")> "alien argument")
    (@throws <(@add "" [])> "alien argument")
    (@throws <(@add "" <>)> "alien argument")
    (@throws <(@add [])> "alien argument")
    (@throws <(@add [] 0)> "alien argument")
    (@throws <(@add [] "")> "alien argument")
    (@throws <(@add [] [])> "alien argument")
    (@throws <(@add [] <>)> "alien argument")
    (@throws <(@add <>)> "alien argument")
    (@throws <(@add <> 0)> "alien argument")
    (@throws <(@add <> "")> "alien argument")
    (@throws <(@add <> [])> "alien argument")
    (@throws <(@add <> <>)> "alien argument")
  /

  \
    "built-in/subtract" |@suite

    (@returns <(@subtract 400 500)> -100)
    (@returns <(@subtract 500 400)> 100)
    (@returns <(@subtract 0 0)> 0)
    (@returns <(@subtract 0 1)> -1)
    (@returns <(@subtract 1 0)> 1)
    (@returns <(@subtract 1 1)> 0)
    (@returns <(@subtract -1 -1)> 0)
    (@returns <(@subtract -1 1)> -2)
    (@returns <(@subtract 1 -1)> 2)
    (@returns <(@subtract 2147483647 0)> 2147483647)
    (@returns <(@subtract -2147483647 0)> -2147483647)
    (@throws <(@subtract 2147483647 -1)> "arithmetic error")
    (@throws <(@subtract -1 2147483647)> "arithmetic error")
    (@throws <(@subtract 2147483647 -2147483647)> "arithmetic error")
    (@throws <(@subtract -2147483647 1)> "arithmetic error")
    (@throws <(@subtract 1 -2147483647)> "arithmetic error")
    (@throws <(@subtract -2147483647 2147483647)> "arithmetic error")
    (@throws <(@subtract)> "absent argument")
    (@throws <(@subtract 0)> "absent argument")
    (@throws <(@subtract 0 "")> "alien argument")
    (@throws <(@subtract 0 [])> "alien argument")
    (@throws <(@subtract 0 <>)> "alien argument")
    (@throws <(@subtract "")> "alien argument")
    (@throws <(@subtract "" 0)> "alien argument")
    (@throws <(@subtract "" "")> "alien argument")
    (@throws <(@subtract "" [])> "alien argument")
    (@throws <(@subtract "" <>)> "alien argument")
    (@throws <(@subtract [])> "alien argument")
    (@throws <(@subtract [] 0)> "alien argument")
    (@throws <(@subtract [] "")> "alien argument")
    (@throws <(@subtract [] [])> "alien argument")
    (@throws <(@subtract [] <>)> "alien argument")
    (@throws <(@subtract <>)> "alien argument")
    (@throws <(@subtract <> 0)> "alien argument")
    (@throws <(@subtract <> "")> "alien argument")
    (@throws <(@subtract <> [])> "alien argument")
    (@throws <(@subtract <> <>)> "alien argument")
  /

  \
    "built-in/multiply" |@suite

    (@returns <(@multiply 5 20)> 100)
    (@returns <(@multiply 20 5)> 100)
    (@returns <(@multiply 0 0)> 0)
    (@returns <(@multiply 0 1)> 0)
    (@returns <(@multiply 1 0)> 0)
    (@returns <(@multiply 1 1)> 1)
    (@returns <(@multiply -1 -1)> 1)
    (@returns <(@multiply -1 1)> -1)
    (@returns <(@multiply 1 -1)> -1)
    (@returns <(@multiply 2147483647 1)> 2147483647)
    (@returns <(@multiply -2147483647 1)> -2147483647)
    (@throws <(@multiply 2147483647 2)> "arithmetic error")
    (@throws <(@multiply 2147483647 -2)> "arithmetic error")
    (@throws <(@multiply -2147483647 2)> "arithmetic error")
    (@throws <(@multiply -2147483647 -2)> "arithmetic error")
    (@throws <(@multiply 2 2147483647)> "arithmetic error")
    (@throws <(@multiply 2 -2147483647)> "arithmetic error")
    (@throws <(@multiply -2 2147483647)> "arithmetic error")
    (@throws <(@multiply -2 -2147483647)> "arithmetic error")
    (@throws <(@multiply 2147483647 2147483647)> "arithmetic error")
    (@throws <(@multiply 2147483647 -2147483647)> "arithmetic error")
    (@throws <(@multiply -2147483647 2147483647)> "arithmetic error")
    (@throws <(@multiply -2147483647 -2147483647)> "arithmetic error")
    (@throws <(@multiply)> "absent argument")
    (@throws <(@multiply 0)> "absent argument")
    (@throws <(@multiply 0 "")> "alien argument")
    (@throws <(@multiply 0 [])> "alien argument")
    (@throws <(@multiply 0 <>)> "alien argument")
    (@throws <(@multiply "")> "alien argument")
    (@throws <(@multiply "" 0)> "alien argument")
    (@throws <(@multiply "" "")> "alien argument")
    (@throws <(@multiply "" [])> "alien argument")
    (@throws <(@multiply "" <>)> "alien argument")
    (@throws <(@multiply [])> "alien argument")
    (@throws <(@multiply [] 0)> "alien argument")
    (@throws <(@multiply [] "")> "alien argument")
    (@throws <(@multiply [] [])> "alien argument")
    (@throws <(@multiply [] <>)> "alien argument")
    (@throws <(@multiply <>)> "alien argument")
    (@throws <(@multiply <> 0)> "alien argument")
    (@throws <(@multiply <> "")> "alien argument")
    (@throws <(@multiply <> [])> "alien argument")
    (@throws <(@multiply <> <>)> "alien argument")
  /

  \
    "built-in/divide" |@suite

    (@returns <(@divide 4 400)> 0)
    (@returns <(@divide 400 4)> 100)
    (@throws <(@divide 0 0)> "arithmetic error")
    (@returns <(@divide 0 1)> 0)
    (@throws <(@divide 1 0)> "arithmetic error")
    (@returns <(@divide 1 1)> 1)
    (@returns <(@divide -1 -1)> 1)
    (@returns <(@divide -1 1)> -1)
    (@returns <(@divide 1 -1)> -1)
    (@returns <(@divide 2147483647 1)> 2147483647)
    (@returns <(@divide -2147483647 1)> -2147483647)
    (@returns <(@divide 2147483647 2147483647)> 1)
    (@returns <(@divide 2147483647 -2147483647)> -1)
    (@returns <(@divide -2147483647 2147483647)> -1)
    (@returns <(@divide -2147483647 -2147483647)> 1)
    (@throws <(@divide)> "absent argument")
    (@throws <(@divide 0)> "absent argument")
    (@throws <(@divide 0 "")> "alien argument")
    (@throws <(@divide 0 [])> "alien argument")
    (@throws <(@divide 0 <>)> "alien argument")
    (@throws <(@divide "")> "alien argument")
    (@throws <(@divide "" 0)> "alien argument")
    (@throws <(@divide "" "")> "alien argument")
    (@throws <(@divide "" [])> "alien argument")
    (@throws <(@divide "" <>)> "alien argument")
    (@throws <(@divide [])> "alien argument")
    (@throws <(@divide [] 0)> "alien argument")
    (@throws <(@divide [] "")> "alien argument")
    (@throws <(@divide [] [])> "alien argument")
    (@throws <(@divide [] <>)> "alien argument")
    (@throws <(@divide <>)> "alien argument")
    (@throws <(@divide <> 0)> "alien argument")
    (@throws <(@divide <> "")> "alien argument")
    (@throws <(@divide <> [])> "alien argument")
    (@throws <(@divide <> <>)> "alien argument")
  /

  \
    "built-in/modulo" |@suite

    (@returns <(@modulo 900 1000)> 900)
    (@returns <(@modulo 1000 900)> 100)
    (@returns <(@modulo 5 2)> 1)
    (@throws <(@modulo 0 0)> "arithmetic error")
    (@returns <(@modulo 0 1)> 0)
    (@throws <(@modulo 1 0)> "arithmetic error")
    (@returns <(@modulo 1 1)> 0)
    (@returns <(@modulo -1 -1)> 0)
    (@returns <(@modulo -1 1)> 0)
    (@returns <(@modulo 1 -1)> 0)
    (@returns <(@modulo 2147483647 2147483647)> 0)
    (@returns <(@modulo 2147483647 -2147483647)> 0)
    (@returns <(@modulo -2147483647 2147483647)> 0)
    (@returns <(@modulo -2147483647 -2147483647)> 0)
    (@throws <(@modulo)> "absent argument")
    (@throws <(@modulo 0)> "absent argument")
    (@throws <(@modulo 0 "")> "alien argument")
    (@throws <(@modulo 0 [])> "alien argument")
    (@throws <(@modulo 0 <>)> "alien argument")
    (@throws <(@modulo "")> "alien argument")
    (@throws <(@modulo "" 0)> "alien argument")
    (@throws <(@modulo "" "")> "alien argument")
    (@throws <(@modulo "" [])> "alien argument")
    (@throws <(@modulo "" <>)> "alien argument")
    (@throws <(@modulo [])> "alien argument")
    (@throws <(@modulo [] 0)> "alien argument")
    (@throws <(@modulo [] "")> "alien argument")
    (@throws <(@modulo [] [])> "alien argument")
    (@throws <(@modulo [] <>)> "alien argument")
    (@throws <(@modulo <>)> "alien argument")
    (@throws <(@modulo <> 0)> "alien argument")
    (@throws <(@modulo <> "")> "alien argument")
    (@throws <(@modulo <> [])> "alien argument")
    (@throws <(@modulo <> <>)> "alien argument")
  /

  \
    "built-in/increment" |@suite

    (@returns <(@increment -1)> 0)
    (@returns <(@increment 0)> 1)
    (@returns <(@increment 1)> 2)
    (@returns <(@increment 2147483646)> 2147483647)
    (@throws <(@increment 2147483647)> "arithmetic error")
    (@throws <(@increment)> "absent argument")
    (@throws <(@increment "")> "alien argument")
    (@throws <(@increment [])> "alien argument")
    (@throws <(@increment <>)> "alien argument")
  /

  \
    "built-in/decrement" |@suite

    (@returns <(@decrement -1)> -2)
    (@returns <(@decrement 0)> -1)
    (@returns <(@decrement 1)> 0)
    (@returns <(@decrement -2147483646)> -2147483647)
    (@throws <(@decrement -2147483647)> "arithmetic error")
    (@throws <(@decrement)> "absent argument")
    (@throws <(@decrement "")> "alien argument")
    (@throws <(@decrement [])> "alien argument")
    (@throws <(@decrement <>)> "alien argument")
  /

  \
    "built-in/and" |@suite

    (@returns <(@and 0 0)> 0)
    (@returns <(@and 0 1)> 0)
    (@returns <(@and 1 0)> 0)
    (@returns <(@and 1 1)> 1)
    (@returns <(@and "" "")> 0)
    (@returns <(@and "" "x")> 0)
    (@returns <(@and "x" "")> 0)
    (@returns <(@and "x" "x")> 1)
    (@returns <(@and [] [])> 0)
    (@returns <(@and [] ["x"])> 0)
    (@returns <(@and ["x"] [])> 0)
    (@returns <(@and ["x"] ["x"])> 1)
    (@returns <(@and <> <>)> 0)
    (@returns <(@and <> <"x">)> 0)
    (@returns <(@and <"x"> <>)> 0)
    (@returns <(@and <"x"> <"x">)> 1)
    (@returns <(@and 1 "x")> 1)
    (@throws <(@and)> "absent argument")
    (@throws <(@and 0)> "absent argument")
    (@throws <(@and "")> "absent argument")
    (@throws <(@and [])> "absent argument")
    (@throws <(@and <>)> "absent argument")
  /

  \
    "built-in/or" |@suite

    (@returns <(@or 0 0)> 0)
    (@returns <(@or 0 1)> 1)
    (@returns <(@or 1 0)> 1)
    (@returns <(@or 1 1)> 1)
    (@returns <(@or "" "")> 0)
    (@returns <(@or "" "x")> 1)
    (@returns <(@or "x" "")> 1)
    (@returns <(@or "x" "x")> 1)
    (@returns <(@or [] [])> 0)
    (@returns <(@or [] ["x"])> 1)
    (@returns <(@or ["x"] [])> 1)
    (@returns <(@or ["x"] ["x"])> 1)
    (@returns <(@or <> <>)> 0)
    (@returns <(@or <> <"x">)> 1)
    (@returns <(@or <"x"> <>)> 1)
    (@returns <(@or <"x"> <"x">)> 1)
    (@returns <(@or 1 "x")> 1)
    (@throws <(@or)> "absent argument")
    (@throws <(@or 0)> "absent argument")
    (@throws <(@or "")> "absent argument")
    (@throws <(@or [])> "absent argument")
    (@throws <(@or <>)> "absent argument")
  /

  \
    "built-in/not" |@suite

    (@returns <(@not 0)> 1)
    (@returns <(@not 1)> 0)
    (@returns <(@not "")> 1)
    (@returns <(@not "x")> 0)
    (@returns <(@not [])> 1)
    (@returns <(@not ["x"])> 0)
    (@returns <(@not <>)> 1)
    (@returns <(@not <"x">)> 0)
    (@throws <(@not)> "absent argument")
  /

  \
    "built-in/precedes" |@suite

    (@returns <(@precedes 0 100)> 1)
    (@returns <(@precedes 100 0)> 0)
    (@returns <(@precedes 100 100)> 0)
    (@returns <(@precedes 0 -100)> 0)
    (@returns <(@precedes -100 0)> 1)
    (@returns <(@precedes -100 -100)> 0)
    (@returns <(@precedes "a" "b")> 1)
    (@returns <(@precedes "b" "a")> 0)
    (@returns <(@precedes "a" "a")> 0)
    (@returns <(@precedes "A" "a")> 1)
    (@returns <(@precedes "a" "A")> 0)
    (@returns <(@precedes "A" "A")> 0)
    (@returns <(@precedes [] [])> 0)
    (@returns <(@precedes [] [1])> 1)
    (@returns <(@precedes [1] [])> 0)
    (@returns <(@precedes [1] [1])> 0)
    (@returns <(@precedes [2] [1])> 0)
    (@returns <(@precedes [1] [2])> 1)
    (@returns <(@precedes [1] [1 2])> 1)
    (@returns <(@precedes [1 2] [1])> 0)
    (@returns <(@precedes [[1]] [[1]])> 0)
    (@returns <(@precedes [[2]] [[1]])> 0)
    (@returns <(@precedes [[1]] [[2]])> 1)
    (@returns <(@precedes @add @subtract)> 1)
    (@returns <(@precedes @subtract @add)> 0)
    (@returns <(@precedes @add @add)> 0)
    (@returns <(@precedes <(@merge "a" "b")> <(@merge "b" "a")>)> 1)
    (@returns <(@precedes <(@merge "b" "a")> <(@merge "a" "b")>)> 0)
    (@returns <(@precedes <(@merge "a" "b")> <(@merge "a" "b")>)> 0)
    (@returns <(@precedes @add <(@add argument 1 argument 2)>)> 0)
    (@returns <(@precedes <(@add argument 1 argument 2)> @add)> 0)
    (@returns <(@precedes 100 "100")> 1)
    (@returns <(@precedes 100 [1])> 1)
    (@returns <(@precedes 100 @add)> 1)
    (@returns <(@precedes "100" 100)> 0)
    (@returns <(@precedes "100" [1])> 1)
    (@returns <(@precedes "100" @add)> 1)
    (@returns <(@precedes [1] 100)> 0)
    (@returns <(@precedes [1] "100")> 0)
    (@returns <(@precedes [1] @add)> 1)
    (@returns <(@precedes @add 100)> 0)
    (@returns <(@precedes @add [1])> 0)
    (@returns <(@precedes @add "100")> 0)
    (@throws <(@precedes)> "absent argument")
    (@throws <(@precedes 0)> "absent argument")
    (@throws <(@precedes "")> "absent argument")
    (@throws <(@precedes [])> "absent argument")
    (@throws <(@precedes <>)> "absent argument")
  /

  \
    "built-in/succeeds" |@suite

    (@returns <(@succeeds 0 100)> 0)
    (@returns <(@succeeds 100 0)> 1)
    (@returns <(@succeeds 100 100)> 0)
    (@returns <(@succeeds 0 -100)> 1)
    (@returns <(@succeeds -100 0)> 0)
    (@returns <(@succeeds -100 -100)> 0)
    (@returns <(@succeeds "a" "b")> 0)
    (@returns <(@succeeds "b" "a")> 1)
    (@returns <(@succeeds "a" "a")> 0)
    (@returns <(@succeeds "A" "a")> 0)
    (@returns <(@succeeds "a" "A")> 1)
    (@returns <(@succeeds "A" "A")> 0)
    (@returns <(@succeeds [] [])> 0)
    (@returns <(@succeeds [] [1])> 0)
    (@returns <(@succeeds [1] [])> 1)
    (@returns <(@succeeds [1] [1])> 0)
    (@returns <(@succeeds [2] [1])> 1)
    (@returns <(@succeeds [1] [2])> 0)
    (@returns <(@succeeds [1] [1 2])> 0)
    (@returns <(@succeeds [1 2] [1])> 1)
    (@returns <(@succeeds [[1]] [[1]])> 0)
    (@returns <(@succeeds [[2]] [[1]])> 1)
    (@returns <(@succeeds [[1]] [[2]])> 0)
    (@returns <(@succeeds @add @subtract)> 0)
    (@returns <(@succeeds @subtract @add)> 1)
    (@returns <(@succeeds @add @add)> 0)
    (@returns <(@succeeds <(@merge "a" "b")> <(@merge "b" "a")>)> 0)
    (@returns <(@succeeds <(@merge "b" "a")> <(@merge "a" "b")>)> 1)
    (@returns <(@succeeds <(@merge "a" "b")> <(@merge "a" "b")>)> 0)
    (@returns <(@succeeds @add <(@add argument 1 argument 2)>)> 0)
    (@returns <(@succeeds <(@add argument 1 argument 2)> @add)> 0)
    (@returns <(@succeeds 100 "100")> 0)
    (@returns <(@succeeds 100 [1])> 0)
    (@returns <(@succeeds 100 @add)> 0)
    (@returns <(@succeeds "100" 100)> 1)
    (@returns <(@succeeds "100" [1])> 0)
    (@returns <(@succeeds "100" @add)> 0)
    (@returns <(@succeeds [1] 100)> 1)
    (@returns <(@succeeds [1] "100")> 1)
    (@returns <(@succeeds [1] @add)> 0)
    (@returns <(@succeeds @add 100)> 1)
    (@returns <(@succeeds @add [1])> 1)
    (@returns <(@succeeds @add "100")> 1)
    (@throws <(@succeeds)> "absent argument")
    (@throws <(@succeeds 0)> "absent argument")
    (@throws <(@succeeds "")> "absent argument")
    (@throws <(@succeeds [])> "absent argument")
    (@throws <(@succeeds <>)> "absent argument")
  /

  \
    "built-in/equals" |@suite

    (@returns <(@equals 0 100)> 0)
    (@returns <(@equals 100 0)> 0)
    (@returns <(@equals 100 100)> 1)
    (@returns <(@equals 0 -100)> 0)
    (@returns <(@equals -100 0)> 0)
    (@returns <(@equals -100 -100)> 1)
    (@returns <(@equals "a" "b")> 0)
    (@returns <(@equals "b" "a")> 0)
    (@returns <(@equals "a" "a")> 1)
    (@returns <(@equals "A" "a")> 0)
    (@returns <(@equals "a" "A")> 0)
    (@returns <(@equals "A" "A")> 1)
    (@returns <(@equals [] [])> 1)
    (@returns <(@equals [] [1])> 0)
    (@returns <(@equals [1] [])> 0)
    (@returns <(@equals [1] [1])> 1)
    (@returns <(@equals [2] [1])> 0)
    (@returns <(@equals [1] [2])> 0)
    (@returns <(@equals [1] [1 2])> 0)
    (@returns <(@equals [1 2] [1])> 0)
    (@returns <(@equals [[1]] [[1]])> 1)
    (@returns <(@equals [[2]] [[1]])> 0)
    (@returns <(@equals [[1]] [[2]])> 0)
    (@returns <(@equals @add @subtract)> 0)
    (@returns <(@equals @subtract @add)> 0)
    (@returns <(@equals @add @add)> 1)
    (@returns <(@equals <(@merge "a" "b")> <(@merge "b" "a")>)> 0)
    (@returns <(@equals <(@merge "b" "a")> <(@merge "a" "b")>)> 0)
    (@returns <(@equals <(@merge "a" "b")> <(@merge "a" "b")>)> 1)
    (@returns <(@equals @add <(@add argument 1 argument 2)>)> 1)
    (@returns <(@equals <(@add argument 1 argument 2)> @add)> 1)
    (@returns <(@equals 100 "100")> 0)
    (@returns <(@equals 100 [1])> 0)
    (@returns <(@equals 100 @add)> 0)
    (@returns <(@equals "100" 100)> 0)
    (@returns <(@equals "100" [1])> 0)
    (@returns <(@equals "100" @add)> 0)
    (@returns <(@equals [1] 100)> 0)
    (@returns <(@equals [1] "100")> 0)
    (@returns <(@equals [1] @add)> 0)
    (@returns <(@equals @add 100)> 0)
    (@returns <(@equals @add [1])> 0)
    (@returns <(@equals @add "100")> 0)
    (@throws <(@equals)> "absent argument")
    (@throws <(@equals 0)> "absent argument")
    (@throws <(@equals "")> "absent argument")
    (@throws <(@equals [])> "absent argument")
    (@throws <(@equals <>)> "absent argument")
  /

  \
    "built-in/measure" |@suite

    (@returns <(@measure "")> 0)
    (@returns <(@measure "1")> 1)
    (@returns <(@measure " ")> 1)
    (@returns <(@measure "123")> 3)
    (@returns <(@measure [])> 0)
    (@returns <(@measure [ ])> 0)
    (@returns <(@measure [1])> 1)
    (@returns <(@measure [1 2 3])> 3)
    (@returns <(@measure [[1] [2 2] [4 4 4 4]])> 3)
    (@returns <(@measure "123")> 3)
    (@throws <(@measure)> "absent argument")
    (@throws <(@measure 0)> "alien argument")
    (@throws <(@measure <>)> "alien argument")
  /

  \
    "built-in/slice" |@suite

    (@returns <(@slice "" 1 1)> "")
    (@returns <(@slice "x" 1 1)> "x")
    (@returns <(@slice "123" 1 1)> "1")
    (@returns <(@slice "123" 2 2)> "2")
    (@returns <(@slice "123" 3 3)> "3")
    (@returns <(@slice "123" 1 3)> "123")
    (@returns <(@slice "123" 0 3)> "123")
    (@returns <(@slice "123" 1 4)> "123")
    (@returns <(@slice "123" 3 1)> "123")
    (@returns <(@slice "123" 3 0)> "123")
    (@returns <(@slice "123" 4 1)> "123")
    (@returns <(@slice [] 1 1)> [])
    (@returns <(@slice ["x"] 1 1)> ["x"])
    (@returns <(@slice [1 2 3] 1 1)> [1])
    (@returns <(@slice [1 2 3] 2 2)> [2])
    (@returns <(@slice [1 2 3] 3 3)> [3])
    (@returns <(@slice [1 2 3] 1 3)> [1 2 3])
    (@returns <(@slice [1 2 3] 0 3)> [1 2 3])
    (@returns <(@slice [1 2 3] 1 4)> [1 2 3])
    (@returns <(@slice [1 2 3] 3 1)> [1 2 3])
    (@returns <(@slice [1 2 3] 3 0)> [1 2 3])
    (@returns <(@slice [1 2 3] 4 1)> [1 2 3])
    (@throws <(@slice)> "absent argument")
    (@throws <(@slice 0)> "alien argument")
    (@throws <(@slice 0 0)> "alien argument")
    (@throws <(@slice 0 0 0)> "alien argument")
    (@throws <(@slice 0 0 "")> "alien argument")
    (@throws <(@slice 0 0 [])> "alien argument")
    (@throws <(@slice 0 0 <>)> "alien argument")
    (@throws <(@slice 0 "")> "alien argument")
    (@throws <(@slice 0 "" 0)> "alien argument")
    (@throws <(@slice 0 "" "")> "alien argument")
    (@throws <(@slice 0 "" [])> "alien argument")
    (@throws <(@slice 0 "" <>)> "alien argument")
    (@throws <(@slice 0 [])> "alien argument")
    (@throws <(@slice 0 [] 0)> "alien argument")
    (@throws <(@slice 0 [] "")> "alien argument")
    (@throws <(@slice 0 [] [])> "alien argument")
    (@throws <(@slice 0 [] <>)> "alien argument")
    (@throws <(@slice 0 <>)> "alien argument")
    (@throws <(@slice 0 <> 0)> "alien argument")
    (@throws <(@slice 0 <> "")> "alien argument")
    (@throws <(@slice 0 <> [])> "alien argument")
    (@throws <(@slice 0 <> <>)> "alien argument")
    (@throws <(@slice "")> "absent argument")
    (@throws <(@slice "" 0)> "absent argument")
    (@throws <(@slice "" 0 "")> "alien argument")
    (@throws <(@slice "" 0 [])> "alien argument")
    (@throws <(@slice "" 0 <>)> "alien argument")
    (@throws <(@slice "" "")> "alien argument")
    (@throws <(@slice "" "" 0)> "alien argument")
    (@throws <(@slice "" "" "")> "alien argument")
    (@throws <(@slice "" "" [])> "alien argument")
    (@throws <(@slice "" "" <>)> "alien argument")
    (@throws <(@slice "" [])> "alien argument")
    (@throws <(@slice "" [] 0)> "alien argument")
    (@throws <(@slice "" [] "")> "alien argument")
    (@throws <(@slice "" [] [])> "alien argument")
    (@throws <(@slice "" [] <>)> "alien argument")
    (@throws <(@slice "" <>)> "alien argument")
    (@throws <(@slice "" <> 0)> "alien argument")
    (@throws <(@slice "" <> "")> "alien argument")
    (@throws <(@slice "" <> [])> "alien argument")
    (@throws <(@slice "" <> <>)> "alien argument")
    (@throws <(@slice [])> "absent argument")
    (@throws <(@slice [] 0)> "absent argument")
    (@throws <(@slice [] 0 "")> "alien argument")
    (@throws <(@slice [] 0 [])> "alien argument")
    (@throws <(@slice [] 0 <>)> "alien argument")
    (@throws <(@slice [] "")> "alien argument")
    (@throws <(@slice [] "" 0)> "alien argument")
    (@throws <(@slice [] "" "")> "alien argument")
    (@throws <(@slice [] "" [])> "alien argument")
    (@throws <(@slice [] "" <>)> "alien argument")
    (@throws <(@slice [] [])> "alien argument")
    (@throws <(@slice [] [] 0)> "alien argument")
    (@throws <(@slice [] [] "")> "alien argument")
    (@throws <(@slice [] [] [])> "alien argument")
    (@throws <(@slice [] [] <>)> "alien argument")
    (@throws <(@slice [] <>)> "alien argument")
    (@throws <(@slice [] <> 0)> "alien argument")
    (@throws <(@slice [] <> "")> "alien argument")
    (@throws <(@slice [] <> [])> "alien argument")
    (@throws <(@slice [] <> <>)> "alien argument")
    (@throws <(@slice <>)> "alien argument")
    (@throws <(@slice <> 0)> "alien argument")
    (@throws <(@slice <> 0 0)> "alien argument")
    (@throws <(@slice <> 0 "")> "alien argument")
    (@throws <(@slice <> 0 [])> "alien argument")
    (@throws <(@slice <> 0 <>)> "alien argument")
    (@throws <(@slice <> "")> "alien argument")
    (@throws <(@slice <> "" 0)> "alien argument")
    (@throws <(@slice <> "" "")> "alien argument")
    (@throws <(@slice <> "" [])> "alien argument")
    (@throws <(@slice <> "" <>)> "alien argument")
    (@throws <(@slice <> [])> "alien argument")
    (@throws <(@slice <> [] 0)> "alien argument")
    (@throws <(@slice <> [] "")> "alien argument")
    (@throws <(@slice <> [] [])> "alien argument")
    (@throws <(@slice <> [] <>)> "alien argument")
    (@throws <(@slice <> <>)> "alien argument")
    (@throws <(@slice <> <> 0)> "alien argument")
    (@throws <(@slice <> <> "")> "alien argument")
    (@throws <(@slice <> <> [])> "alien argument")
    (@throws <(@slice <> <> <>)> "alien argument")
  /

  \
    "built-in/merge" |@suite

    (@returns <(@merge "" "")> "")
    (@returns <(@merge "l" "")> "l")
    (@returns <(@merge "" "r")> "r")
    (@returns <(@merge "l" "r")> "lr")
    (@returns <(@merge "ll" "rrrr")> "llrrrr")
    (@returns <(@merge [] [])> [])
    (@returns <(@merge ["l"] [])> ["l"])
    (@returns <(@merge [] ["r"])> ["r"])
    (@returns <(@merge ["l"] ["r"])> ["l" "r"])
    (@returns <(@merge ["l" "l"] ["r" "r" "r" "r"])> ["l" "l" "r" "r" "r" "r"])
    (@throws <(@merge)> "absent argument")
    (@throws <(@merge 0)> "alien argument")
    (@throws <(@merge 0 0)> "alien argument")
    (@throws <(@merge 0 "")> "alien argument")
    (@throws <(@merge 0 [])> "alien argument")
    (@throws <(@merge 0 <>)> "alien argument")
    (@throws <(@merge "")> "absent argument")
    (@throws <(@merge "" 0)> "alien argument")
    (@throws <(@merge "" [])> "alien argument")
    (@throws <(@merge "" <>)> "alien argument")
    (@throws <(@merge [])> "absent argument")
    (@throws <(@merge [] 0)> "alien argument")
    (@throws <(@merge [] "")> "alien argument")
    (@throws <(@merge [] <>)> "alien argument")
    (@throws <(@merge <>)> "alien argument")
    (@throws <(@merge <> 0)> "alien argument")
    (@throws <(@merge <> "")> "alien argument")
    (@throws <(@merge <> [])> "alien argument")
    (@throws <(@merge <> <>)> "alien argument")
  /

  \
    "built-in/read" |@suite

    if @persistence
    \
      (@returns <
  "/tmp" |$directory
  catch \ (@query "TMPDIR") |$directory /
  (@merge $directory "/read.txt") |$file
  (@write $file "")
  (@read $file "") |$result
  (@delete $file)
  $result
> "")
      (@returns <
  "/tmp" |$directory
  catch \ (@query "TMPDIR") |$directory /
  (@merge $directory "/read.txt") |$file
  (@write $file "TEXT FILE")
  (@read $file "") |$result
  (@delete $file)
  $result
> "TEXT FILE")
      (@returns <
  "/tmp" |$directory
  catch \ (@query "TMPDIR") |$directory /
  (@merge $directory "/read.txt") |$file
  (@write $file "LINE 1\nLINE 2\nLINE 3")
  (@read $file "") |$result
  (@delete $file)
  $result
> "LINE 1\nLINE 2\nLINE 3")
      (@returns <
  "/tmp" |$directory
  catch \ (@query "TMPDIR") |$directory /
  (@merge $directory "/read.txt") |$file
  (@write $file "")
  (@read $file "\n") |$result
  (@delete $file)
  $result
> "")
      (@returns <
  "/tmp" |$directory
  catch \ (@query "TMPDIR") |$directory /
  (@merge $directory "/read.txt") |$file
  (@write $file "TEXT FILE")
  (@read $file "\n") |$result
  (@delete $file)
  $result
> "TEXT FILE")
      (@returns <
  "/tmp" |$directory
  catch \ (@query "TMPDIR") |$directory /
  (@merge $directory "/read.txt") |$file
  (@write $file "LINE 1\nLINE 2\nLINE 3")
  (@read $file "\n") |$result
  (@delete $file)
  $result
> "LINE 1")
      (@returns <
  "/tmp" |$directory
  catch \ (@query "TMPDIR") |$directory /
  (@merge $directory "/read.txt") |$file
  (@write $file "LINE 1\nLINE 2\nLINE 3")
  (@read $file "\n") |$result
  (@read $file "\n") |$result
  (@read $file "\n") |$result
  (@delete $file)
  $result
> "LINE 1")
      (@returns <
  "/tmp" |$directory
  catch \ (@query "TMPDIR") |$directory /
  (@merge $directory "/read.txt") |$file
  (@write $file "WORD 1\x00WORD 2\x00WORD 3")
  (@read $file "\x00") |$result
  (@delete $file)
  $result
> "WORD 1")
      (@throws <
  "/tmp" |$directory
  catch \ (@query "TMPDIR") |$directory /
  (@merge $directory "/read.txt") |$file
  (@write $file "TEXT FILE")
  (@delete $file)
  (@read $file "")
> "absent file")
      (@throws <(@read "" "XXX")> "damaged argument")
      (@throws <(@read 3 "")> "absent file")
      (@throws <(@read "" "")> "absent file")
      (@throws <(@read)> "absent argument")
      (@throws <(@read 0)> "absent argument")
      (@throws <(@read 0 0)> "alien argument")
      (@throws <(@read 0 [])> "alien argument")
      (@throws <(@read 0 <>)> "alien argument")
      (@throws <(@read "")> "absent argument")
      (@throws <(@read "" 0)> "alien argument")
      (@throws <(@read "" [])> "alien argument")
      (@throws <(@read "" <>)> "alien argument")
      (@throws <(@read [])> "alien argument")
      (@throws <(@read [] 0)> "alien argument")
      (@throws <(@read [] "")> "alien argument")
      (@throws <(@read [] [])> "alien argument")
      (@throws <(@read [] <>)> "alien argument")
      (@throws <(@read <>)> "alien argument")
      (@throws <(@read <> 0)> "alien argument")
      (@throws <(@read <> "")> "alien argument")
      (@throws <(@read <> [])> "alien argument")
      (@throws <(@read <> <>)> "alien argument")
    /
  /

  \
    "built-in/write" |@suite

    if @persistence
    \
      (@returns <
  "/tmp" |$directory
  catch \ (@query "TMPDIR") |$directory /
  (@merge $directory "/write.txt") |$file
  (@write $file "FIRST")
  (@write $file "LAST")
  (@read $file "") |$result
  (@delete $file)
  $result
> "LAST")
      (@returns <
  "/tmp" |$directory
  catch \ (@query "TMPDIR") |$directory /
  (@merge $directory "/write.txt") |$file
  (@write $file "TEXT FILE") |$result
  (@delete $file)
  $result
> "")
      (@throws <(@write 3 "")> "absent file")
      (@throws <(@write "" "")> "absent file")
      (@throws <(@write)> "absent argument")
      (@throws <(@write 0)> "absent argument")
      (@throws <(@write 0 0)> "alien argument")
      (@throws <(@write 0 [])> "alien argument")
      (@throws <(@write 0 <>)> "alien argument")
      (@throws <(@write "")> "absent argument")
      (@throws <(@write "" 0)> "alien argument")
      (@throws <(@write "" [])> "alien argument")
      (@throws <(@write "" <>)> "alien argument")
      (@throws <(@write [])> "alien argument")
      (@throws <(@write [] 0)> "alien argument")
      (@throws <(@write [] "")> "alien argument")
      (@throws <(@write [] [])> "alien argument")
      (@throws <(@write [] <>)> "alien argument")
      (@throws <(@write <>)> "alien argument")
      (@throws <(@write <> 0)> "alien argument")
      (@throws <(@write <> "")> "alien argument")
      (@throws <(@write <> [])> "alien argument")
      (@throws <(@write <> <>)> "alien argument")
    /
  /

  \
    "built-in/delete" |@suite

    if @persistence
    \
      (@returns <
  "/tmp" |$directory
  catch \ (@query "TMPDIR") |$directory /
  (@merge $directory "/delete.txt") |$file
  (@write $file "TEXT FILE")
  (@delete $file)
> "")
      (@throws <
  "/tmp" |$directory
  catch \ (@query "TMPDIR") |$directory /
  (@merge $directory "/delete.txt") |$file
  (@write $file "text")
  (@delete $file)
  (@delete $file)
> "io error")
      (@throws <(@delete 3)> "io error")
      (@throws <(@delete "")> "io error")
      (@throws <(@delete)> "absent argument")
      (@throws <(@delete [])> "alien argument")
      (@throws <(@delete <>)> "alien argument")
    /
  /

  \
    "built-in/exit" |@suite

    (@throws <(@exit -1)> "damaged argument")
    (@throws <(@exit 256)> "damaged argument")
    (@throws <(@exit)> "absent argument")
    (@throws <(@exit "")> "alien argument")
    (@throws <(@exit [])> "alien argument")
    (@throws <(@exit <>)> "alien argument")
  /

  \
    "built-in/query" |@suite

    (@returns <(@classify (@query "TERM"))> "string")
    (@returns <(@equals (@measure (@query "TERM")) 0)> 0)
    (@throws <(@query "__absent__")> "absent environment variable")
    (@throws <(@query)> "absent argument")
    (@throws <(@query 0)> "alien argument")
    (@throws <(@query [])> "alien argument")
    (@throws <(@query <>)> "alien argument")
  /

  \
    "built-in/serialize" |@suite

    (@returns <(@serialize 0)> "0")
    (@returns <(@serialize 1)> "1")
    (@returns <(@serialize -1)> "-1")
    (@returns <(@serialize +1)> "1")
    (@returns <(@serialize 100)> "100")
    (@returns <(@serialize -100)> "-100")
    (@returns <(@serialize +100)> "100")
    (@returns <(@serialize 2147483647)> "2147483647")
    (@returns <(@serialize -2147483647)> "-2147483647")
    (@returns <(@serialize +2147483647)> "2147483647")
    (@returns <(@serialize 000000000000000000000000000000000000000000000000002147483647)> "2147483647")
    (@returns <(@serialize "")> "\"\"")
    (@returns <(@serialize "x")> "\"x\"")
    (@returns <(@serialize "text")> "\"text\"")
    (@returns <(@serialize "\n")> "\"\\n\"")
    (@returns <(@serialize "\\\"\t\r\n")> "\"\\\\\\\"\\t\\r\\n\"")
    (@returns <(@serialize "\xff")> "\"\\xff\"")
    (@returns <(@serialize "\x00\x1f\x7f\xff")> "\"\\x00\\x1f\\x7f\\xff\"")
    (@returns <(@serialize [])> "[]")
    (@returns <(@serialize [ ])> "[]")
    (@returns <(@serialize ["x"])> "[\"x\"]")
    (@returns <(@serialize [0 "" [] <>])> "[0 \"\" [] <>]")
    (@returns <(@serialize [1 [2 [3]]])> "[1 [2 [3]]]")
    (@returns <(@serialize [[[3] 2] 1])> "[[[3] 2] 1]")
    (@returns <(@serialize ["\\" "\"" "\t" "\r" "\n"])> "[\"\\\\\" \"\\\"\" \"\\t\" \"\\r\" \"\\n\"]")
    (@returns <(@serialize [100 "text" [0 "" [] <>] <(@merge "a" "b")>])> "[100 \"text\" [0 \"\" [] <>] <(@merge \"a\" \"b\")>]")
    (@returns <(@serialize <>)> "<>")
    (@returns <(@serialize < >)> "< >")
    (@returns <(@serialize <(@merge "a" "b")>)> "<(@merge \"a\" \"b\")>")
    (@returns <(@serialize <
  # make strings more exciting!
  (@merge argument 1 "!")
>)> "<\n  # make strings more exciting!\n  (@merge argument 1 \"!\")\n>")
    (@returns <(@serialize @add)> "<(@add argument 1 argument 2)>")
    (@returns <(@serialize @subtract)> "<(@subtract argument 1 argument 2)>")
    (@returns <(@serialize @multiply)> "<(@multiply argument 1 argument 2)>")
    (@returns <(@serialize @divide)> "<(@divide argument 1 argument 2)>")
    (@returns <(@serialize @modulo)> "<(@modulo argument 1 argument 2)>")
    (@returns <(@serialize @increment)> "<(@increment argument 1)>")
    (@returns <(@serialize @decrement)> "<(@decrement argument 1)>")
    (@returns <(@serialize @and)> "<(@and argument 1 argument 2)>")
    (@returns <(@serialize @or)> "<(@or argument 1 argument 2)>")
    (@returns <(@serialize @not)> "<(@not argument 1)>")
    (@returns <(@serialize @precedes)> "<(@precedes argument 1 argument 2)>")
    (@returns <(@serialize @succeeds)> "<(@succeeds argument 1 argument 2)>")
    (@returns <(@serialize @equals)> "<(@equals argument 1 argument 2)>")
    (@returns <(@serialize @measure)> "<(@measure argument 1)>")
    (@returns <(@serialize @slice)> "<(@slice argument 1 argument 2 argument 3)>")
    (@returns <(@serialize @merge)> "<(@merge argument 1 argument 2)>")
    (@returns <(@serialize @read)> "<(@read argument 1 argument 2)>")
    (@returns <(@serialize @write)> "<(@write argument 1 argument 2)>")
    (@returns <(@serialize @delete)> "<(@delete argument 1)>")
    (@returns <(@serialize @query)> "<(@query argument 1)>")
    (@returns <(@serialize @exit)> "<(@exit argument 1)>")
    (@returns <(@serialize @serialize)> "<(@serialize argument 1)>")
    (@returns <(@serialize @deserialize)> "<(@deserialize argument 1)>")
    (@returns <(@serialize @classify)> "<(@classify argument 1)>")
    (@throws <(@serialize)> "absent argument")
  /

  \
    "built-in/deserialize" |@suite

    (@returns <(@deserialize "0")> 0)
    (@returns <(@deserialize "\"\"")> "")
    (@returns <(@deserialize "[]")> [])
    (@returns <(@deserialize "[0 \"\" [] <>]")> [0 "" [] <>])
    (@returns <(@deserialize "<>")> <>)
    (@returns <(@deserialize "<(@exit 1)>")> <(@exit 1)>)
    (@throws <(@deserialize "")> "codec error")
    (@throws <(@deserialize "#comment")> "codec error")
    (@throws <(@deserialize "@write")> "codec error")
    (@throws <(@deserialize "if 0 1")> "codec error")
    (@throws <(@deserialize)> "absent argument")
    (@throws <(@deserialize 0)> "alien argument")
    (@throws <(@deserialize [])> "alien argument")
    (@throws <(@deserialize <>)> "alien argument")
  /

  \
    "built-in/classify" |@suite

    (@returns <(@classify 0)> "number")
    (@returns <(@classify "")> "string")
    (@returns <(@classify [])> "list")
    (@returns <(@classify <>)> "function")
    (@throws <(@classify)> "absent argument")
  /

  \
    "built-in/evaluate" |@suite

    (@returns <(@evaluate "")> "")
    (@returns <(@evaluate "#comment")> "")
    (@returns <(@evaluate "@write")> @write)
    (@returns <(@evaluate "if 0 1")> "")
    (@returns <(@evaluate "0")> 0)
    (@returns <(@evaluate "\"\"")> "")
    (@returns <(@evaluate "<>")> <>)
    (@returns <(@evaluate "1 |$l 2 |$r (@add $l $r)")> 3)
    (@returns <(@evaluate "1") (@evaluate "2") (@evaluate "3")> 3)
    (@returns <"x" |$variable (@evaluate "$variable") $variable> "x")
    (@returns <(@evaluate "\"x\" |$variable") $variable> "x")
    (@returns <(<(@evaluate "argument 1")> "a" "b" "c")> "a")
    (@returns <(<(@evaluate "argument 2")> "a" "b" "c")> "b")
    (@returns <(<(@evaluate "argument 3")> "a" "b" "c")> "c")
    (@returns <(<(@evaluate "(@evaluate \"1\") 2 3")>)> 3)
    (@returns <(<(@evaluate "1 (@evaluate \"2\") 3")>)> 3)
    (@returns <(<(@evaluate "1 2 (@evaluate \"3\")")>)> 3)
    (@returns <(<(@evaluate "(@evaluate \"argument 1\") argument 2 argument 3")> "a" "b" "c")> "c")
    (@returns <(<(@evaluate "argument 1 (@evaluate \"argument 2\") argument 3")> "a" "b" "c")> "c")
    (@returns <(<(@evaluate "argument 1 argument 2 (@evaluate \"argument 3\")")> "a" "b" "c")> "c")
    (@throws <(@evaluate "throw \"error\"")> "error")
    (@throws <(@evaluate "\"")> "lex error")
    (@throws <(@evaluate "-1 +2 *3 /4")> "lex error")
    (@throws <(@evaluate "if")> "parse error")
    (@throws <(<(@evaluate "argument 4")> "a" "b" "c")> "absent argument")
    (@throws <(@evaluate)> "absent argument")
    (@throws <(@evaluate 0)> "alien argument")
    (@throws <(@evaluate [])> "alien argument")
    (@throws <(@evaluate <>)> "alien argument")
  /

  \
    "source/token-terminating-symbols" |@suite

    (@returns <(@evaluate " ")> "")
    (@returns <(@evaluate "\t")> "")
    (@returns <(@evaluate "\r")> "")
    (@returns <(@evaluate "\n")> "")
    (@returns <(@evaluate ",")> "")
    (@returns <(@evaluate " \t\r\n,")> "")
    (@returns <(@evaluate "(@add 100 200) ")> 300)
    (@returns <(@evaluate "(@add\t100\t200)\n")> 300)
    (@returns <(@evaluate "(@add\r100\r200)\r")> 300)
    (@returns <(@evaluate "(@add\n100\n200)\n")> 300)
    (@returns <(@evaluate "(@add\r\n100\r\n200)\r\n")> 300)
    (@returns <(@evaluate "(@add,100,200)")> 300)
    (@returns <(@evaluate "(@add, 100, 200)")> 300)
    (@returns <(@evaluate ",,,(,,,@add,,,100,,,200,,,),,,")> 300)
  /

  \
    "source/illegal-symbols" |@suite

    (@lexFails "\x00")
    (@lexFails "\x01")
    (@lexFails "\x02")
    (@lexFails "\x03")
    (@lexFails "\x04")
    (@lexFails "\x05")
    (@lexFails "\x06")
    (@lexFails "\x07")
    (@lexFails "\x08")
    (@lexFails "\x0b")
    (@lexFails "\x0c")
    (@lexFails "\x0e")
    (@lexFails "\x0f")
    (@lexFails "\x10")
    (@lexFails "\x11")
    (@lexFails "\x12")
    (@lexFails "\x13")
    (@lexFails "\x14")
    (@lexFails "\x15")
    (@lexFails "\x16")
    (@lexFails "\x17")
    (@lexFails "\x18")
    (@lexFails "\x19")
    (@lexFails "\x1a")
    (@lexFails "\x1b")
    (@lexFails "\x1c")
    (@lexFails "\x1d")
    (@lexFails "\x1e")
    (@lexFails "\x1f")
    (@lexFails "\x7f")
    (@lexFails "\x80")
    (@lexFails "\x81")
    (@lexFails "\x82")
    (@lexFails "\x83")
    (@lexFails "\x84")
    (@lexFails "\x85")
    (@lexFails "\x86")
    (@lexFails "\x87")
    (@lexFails "\x88")
    (@lexFails "\x89")
    (@lexFails "\x8a")
    (@lexFails "\x8b")
    (@lexFails "\x8c")
    (@lexFails "\x8d")
    (@lexFails "\x8e")
    (@lexFails "\x8f")
    (@lexFails "\x90")
    (@lexFails "\x91")
    (@lexFails "\x92")
    (@lexFails "\x93")
    (@lexFails "\x94")
    (@lexFails "\x95")
    (@lexFails "\x96")
    (@lexFails "\x97")
    (@lexFails "\x98")
    (@lexFails "\x99")
    (@lexFails "\x9a")
    (@lexFails "\x9b")
    (@lexFails "\x9c")
    (@lexFails "\x9d")
    (@lexFails "\x9e")
    (@lexFails "\x9f")
    (@lexFails "\xa0")
    (@lexFails "\xa1")
    (@lexFails "\xa2")
    (@lexFails "\xa3")
    (@lexFails "\xa4")
    (@lexFails "\xa5")
    (@lexFails "\xa6")
    (@lexFails "\xa7")
    (@lexFails "\xa8")
    (@lexFails "\xa9")
    (@lexFails "\xaa")
    (@lexFails "\xab")
    (@lexFails "\xac")
    (@lexFails "\xad")
    (@lexFails "\xae")
    (@lexFails "\xaf")
    (@lexFails "\xb0")
    (@lexFails "\xb1")
    (@lexFails "\xb2")
    (@lexFails "\xb3")
    (@lexFails "\xb4")
    (@lexFails "\xb5")
    (@lexFails "\xb6")
    (@lexFails "\xb7")
    (@lexFails "\xb8")
    (@lexFails "\xb9")
    (@lexFails "\xba")
    (@lexFails "\xbb")
    (@lexFails "\xbc")
    (@lexFails "\xbd")
    (@lexFails "\xbe")
    (@lexFails "\xbf")
    (@lexFails "\xc0")
    (@lexFails "\xc1")
    (@lexFails "\xc2")
    (@lexFails "\xc3")
    (@lexFails "\xc4")
    (@lexFails "\xc5")
    (@lexFails "\xc6")
    (@lexFails "\xc7")
    (@lexFails "\xc8")
    (@lexFails "\xc9")
    (@lexFails "\xca")
    (@lexFails "\xcb")
    (@lexFails "\xcc")
    (@lexFails "\xcd")
    (@lexFails "\xce")
    (@lexFails "\xcf")
    (@lexFails "\xd0")
    (@lexFails "\xd1")
    (@lexFails "\xd2")
    (@lexFails "\xd3")
    (@lexFails "\xd4")
    (@lexFails "\xd5")
    (@lexFails "\xd6")
    (@lexFails "\xd7")
    (@lexFails "\xd8")
    (@lexFails "\xd9")
    (@lexFails "\xda")
    (@lexFails "\xdb")
    (@lexFails "\xdc")
    (@lexFails "\xdd")
    (@lexFails "\xde")
    (@lexFails "\xdf")
    (@lexFails "\xe0")
    (@lexFails "\xe1")
    (@lexFails "\xe2")
    (@lexFails "\xe3")
    (@lexFails "\xe4")
    (@lexFails "\xe5")
    (@lexFails "\xe6")
    (@lexFails "\xe7")
    (@lexFails "\xe8")
    (@lexFails "\xe9")
    (@lexFails "\xea")
    (@lexFails "\xeb")
    (@lexFails "\xec")
    (@lexFails "\xed")
    (@lexFails "\xee")
    (@lexFails "\xef")
    (@lexFails "\xf0")
    (@lexFails "\xf1")
    (@lexFails "\xf2")
    (@lexFails "\xf3")
    (@lexFails "\xf4")
    (@lexFails "\xf5")
    (@lexFails "\xf6")
    (@lexFails "\xf7")
    (@lexFails "\xf8")
    (@lexFails "\xf9")
    (@lexFails "\xfa")
    (@lexFails "\xfb")
    (@lexFails "\xfc")
    (@lexFails "\xfd")
    (@lexFails "\xfe")
    (@lexFails "\xff")
  /

  \
    "source/unknown-keywords" |@suite

    (@lexFails "junk")
    (@lexFails "throwing")
    (@lexFails "bigargument")
    (@parseFails "ifelse")
    (@parseFails "elseif")
  /
/ |$error

if $error
\
  (@write @stderr (@serialize $error))
  (@write @stderr "\n")
  (@exit 1)
/

(@writeStatus "PASS" 32)
