#!/bin/sh
PROGRAM=$1

write_status()
{
    status=$1
    color=$2

    if [ -z "$NO_COLOR" ]
    then
        printf '\033[7;%dm %s \033[0m\n' $color "$status" 1>&2
    else
        printf '[%s]\n' "$status" 1>&2
    fi
}

write_detail()
{
    header=$1
    value=$2

    if [ -z "$NO_COLOR" ]
    then
        printf '\033[1m%s:\033[0m\n%s\n' "$header" "$value" 1>&2
    else
        printf '%s:\n%s\n' "$header" "$value" 1>&2
    fi
}

test_code()
{
    source=$1
    expected_output=$2
    expected_exit=$3

    actual_output="`$PROGRAM -t "$source"`"
    actual_exit=$?

    if [ "$actual_exit" != "$expected_exit" ]
    then
        write_status 'FAIL' 31
        write_detail 'Reason' 'an unexpected exit code was returned'
        write_detail 'Source' "$source"
        write_detail 'Actual' "$actual_exit"
        write_detail 'Expected' "$expected_exit"

        exit 1
    fi

    if [ "$actual_output" != "$expected_output" ]
    then
        write_status 'FAIL' 31
        write_detail 'Reason' 'an unexpected output was returned'
        write_detail 'Source' "$source"
        write_detail 'Actual' "$actual_output"
        write_detail 'Expected' "$expected_output"

        exit 1
    fi
}

test_code '' '' 0
test_code ' ' '' 0
test_code '
' '' 0
test_code '#comment' '' 0
test_code '""' '' 0
test_code '"text"' '' 0
test_code '@write' '' 0
test_code '(@write "/dev/stdout" "")' '' 0
test_code '(@write "/dev/stdout" "text")' 'text' 0
test_code '(@write "/dev/stdout" "1") (@write "/dev/stdout" "2") (@write "/dev/stdout" "3")' '123' 0
test_code '(@write "/dev/stdout" (@write "/dev/stdout" "text"))' 'text' 0
test_code '(@write"/dev/stdout""text")' 'text' 0
test_code '(@write)' '' 1
test_code '(@write "/dev/stdout")' '' 1
test_code '(@write @write @write)' '' 1
test_code '(@write "/dev/stdout" "1") @invalid (@write "/dev/stdout" "2")' '1' 1
test_code '(@write "/dev/stdout" "text" "extra")' 'text' 0
test_code '(@write "/dev/stdout" "text" @invalid)' '' 1
test_code '@' '' 1
test_code '|' '' 1
test_code '@|' '' 1
test_code '|@' '' 1
test_code '$write' '' 1
test_code '"text" |$variable' '' 1
test_code '"text" |@variable (@write "/dev/stdout" @variable)' 'text' 0
test_code '"text" |@variable |@clone (@write "/dev/stdout" @clone)' 'text' 0
test_code '"text" |@variable |@variable (@write "/dev/stdout" @variable)' 'text' 0
test_code '@write |@w (@w "/dev/stdout" "text")' 'text' 0
test_code '"text" |@write' '' 0
test_code '"|@variable' '' 1
test_code 'if "0" (@write "/dev/stdout" "pass")' 'pass' 0
test_code 'if "1" (@write "/dev/stdout" "pass")' 'pass' 0
test_code 'if "x" (@write "/dev/stdout" "pass")' 'pass' 0
test_code 'if @write (@write "/dev/stdout" "pass")' 'pass' 0
test_code 'if "" (@write "/dev/stdout" "pass")' '' 0
test_code 'if "1" if "2" (@write "/dev/stdout" "pass")' 'pass' 0
test_code 'if "1" if "" (@write "/dev/stdout" "pass")' '' 0
test_code 'if "" if "" (@write "/dev/stdout" "pass")' '' 0
test_code '(@write "/dev/stdout" if "" "pass")' '' 0
test_code '(@write "/dev/stdout" if "x" "pass")' 'pass' 0
test_code 'if' '' 1
test_code 'if ""' '' 1
test_code 'junk' '' 1
test_code '\ /' '' 0
test_code '\ (@write "/dev/stdout" "1") /' '1' 0
test_code '\ (@write "/dev/stdout" "1") (@write "/dev/stdout" "2") (@write "/dev/stdout" "3") /' '123' 0
test_code '(@write "/dev/stdout" \ "1" "2" "3" /)' '3' 0
test_code '\' '' 1
test_code '/' '' 1
test_code '/ "1"' '' 1
test_code 'while "" \/' '' 0
test_code '"x" |@test while @test \ (@write "/dev/stdout" ".") "" |@test /' '.' 0
test_code '"" |@1 "" |@2 "x" |@3 "x" |@t while @t \ (@write "/dev/stdout" ".") if @1 \ "" |@t / if @2 \ "x" |@1 / if @3 \ "x" |@2 / /' '...' 0
test_code '(@write "/dev/stdout" \ while "" \/ /)' '' 0
test_code '"x" |@test (@write "/dev/stdout" \ while @test \ "" |@test "." / /)' '' 0
test_code 'while' '' 1
test_code 'while ""' '' 1
test_code 'catch @missing' '' 0
test_code '(@write "/dev/stdout" \ catch \ @missing / /)' 'absent variable' 0
test_code '(@write "/dev/stdout" \ catch \ "text" / /)' '' 0
test_code '(@write "/dev/stdout" \ catch \ / /)' '' 0
test_code 'catch' '' 1

write_status 'PASS' 32
