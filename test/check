#!/bin/sh
PROGRAM=$1

write_status()
{
    status=$1
    color=$2

    if [ -z "$NO_COLOR" ]
    then
        printf '\033[7;%dm %s \033[0m\n' $color "$status" 1>&2
    else
        printf '[%s]\n' "$status" 1>&2
    fi
}

write_detail()
{
    header=$1
    value=$2

    if [ -z "$NO_COLOR" ]
    then
        printf '\033[1m%s:\033[0m\n%s\n' "$header" "$value" 1>&2
    else
        printf '%s:\n%s\n' "$header" "$value" 1>&2
    fi
}

test_code()
{
    source=$1
    expected_output=$2
    expected_exit=$3

    actual_output=`$PROGRAM -t -- "$source"`
    actual_exit=$?

    if [ "$actual_exit" != "$expected_exit" ]
    then
        write_status 'FAIL' 31
        write_detail 'Reason' 'an unexpected exit code was returned'
        write_detail 'Source' "$source"
        write_detail 'Actual' "$actual_exit"
        write_detail 'Expected' "$expected_exit"

        exit 1
    fi

    if [ "$actual_output" != "$expected_output" ]
    then
        write_status 'FAIL' 31
        write_detail 'Reason' 'an unexpected output was returned'
        write_detail 'Source' "$source"
        write_detail 'Actual' "$actual_output"
        write_detail 'Expected' "$expected_output"

        exit 1
    fi
}

test_code '' '' 0
test_code ' ' '' 0
test_code '
' '' 0
test_code '#comment' '' 0
test_code '""' '' 0
test_code '"text"' '' 0
test_code '@write' '' 0
test_code '(@write "/dev/stdout" "")' '' 0
test_code '(@write "/dev/stdout" "text")' 'text' 0
test_code '(@write "/dev/stdout" "1") (@write "/dev/stdout" "2") (@write "/dev/stdout" "3")' '123' 0
test_code '(@write "/dev/stdout" (@write "/dev/stdout" "text"))' 'text' 0
test_code '(@write"/dev/stdout""text")' 'text' 0
test_code '(@write)' '' 1
test_code '(@write "/dev/stdout")' '' 1
test_code '(@write @write @write)' '' 1
test_code '(@write "/dev/stdout" "1") @invalid (@write "/dev/stdout" "2")' '1' 1
test_code '(@write "/dev/stdout" "text" "extra")' 'text' 0
test_code '(@write "/dev/stdout" "text" @invalid)' '' 1
test_code '@' '' 1
test_code '|' '' 1
test_code '@|' '' 1
test_code '|@' '' 1
test_code '$write' '' 1
test_code '"text" |$variable' '' 1
test_code '"text" |@variable (@write "/dev/stdout" @variable)' 'text' 0
test_code '"text" |@variable |@clone (@write "/dev/stdout" @clone)' 'text' 0
test_code '"text" |@variable |@variable (@write "/dev/stdout" @variable)' 'text' 0
test_code '@write |@w (@w "/dev/stdout" "text")' 'text' 0
test_code '"text" |@write' '' 0
test_code '"|@variable' '' 1
test_code 'if "0" (@write "/dev/stdout" "pass")' 'pass' 0
test_code 'if "1" (@write "/dev/stdout" "pass")' 'pass' 0
test_code 'if "x" (@write "/dev/stdout" "pass")' 'pass' 0
test_code 'if @write (@write "/dev/stdout" "pass")' 'pass' 0
test_code 'if "" (@write "/dev/stdout" "pass")' '' 0
test_code 'if "1" if "2" (@write "/dev/stdout" "pass")' 'pass' 0
test_code 'if "1" if "" (@write "/dev/stdout" "pass")' '' 0
test_code 'if "" if "" (@write "/dev/stdout" "pass")' '' 0
test_code '(@write "/dev/stdout" if "" "pass")' '' 0
test_code '(@write "/dev/stdout" if "x" "pass")' 'pass' 0
test_code 'if' '' 1
test_code 'if ""' '' 1
test_code 'junk' '' 1
test_code '\ /' '' 0
test_code '\ (@write "/dev/stdout" "1") /' '1' 0
test_code '\ (@write "/dev/stdout" "1") (@write "/dev/stdout" "2") (@write "/dev/stdout" "3") /' '123' 0
test_code '(@write "/dev/stdout" \ "1" "2" "3" /)' '3' 0
test_code '\' '' 1
test_code '/' '' 1
test_code '/ "1"' '' 1
test_code 'while "" \/' '' 0
test_code '"x" |@test while @test \ (@write "/dev/stdout" ".") "" |@test /' '.' 0
test_code '"" |@1 "" |@2 "x" |@3 "x" |@t while @t \ (@write "/dev/stdout" ".") if @1 \ "" |@t / if @2 \ "x" |@1 / if @3 \ "x" |@2 / /' '...' 0
test_code '(@write "/dev/stdout" \ while "" \/ /)' '' 0
test_code '"x" |@test (@write "/dev/stdout" \ while @test \ "" |@test "." / /)' '' 0
test_code 'while' '' 1
test_code 'while ""' '' 1
test_code 'catch @missing' '' 0
test_code '(@write "/dev/stdout" \ catch \ @missing / /)' 'absent variable' 0
test_code '(@write "/dev/stdout" \ catch \ "text" / /)' '' 0
test_code '(@write "/dev/stdout" \ catch \ / /)' '' 0
test_code 'catch' '' 1
test_code 'throw "error"' '' 1
test_code '(@write "/dev/stdout" \ catch \ throw "error" / /)' 'error' 0
test_code '(\ catch \ throw @write / / "/dev/stdout" "text")' 'text' 0
test_code 'throw throw "error"' '' 1
test_code 'throw' '' 1
test_code '"text" |@variable %@variable (@write "/dev/stdout" \ catch \ @variable / /)' 'absent variable' 0
test_code '%@variable (@write "/dev/stdout" \ catch \ @variable / /)' 'absent variable' 0
test_code '"0" |@0 "1" |@1 "2" |@2 %@0 (@write "/dev/stdout" @1) (@write "/dev/stdout" @2)' '12' 0
test_code '"0" |@0 "1" |@1 "2" |@2 %@1 (@write "/dev/stdout" @0) (@write "/dev/stdout" @2)' '02' 0
test_code '"0" |@0 "1" |@1 "2" |@2 %@2 (@write "/dev/stdout" @0) (@write "/dev/stdout" @1)' '01' 0
test_code '"0" |@0 "1" |@1 "2" |@2 %@0 %@1 (@write "/dev/stdout" @2)' '2' 0
test_code '"0" |@0 "1" |@1 "2" |@2 %@1 %@0 (@write "/dev/stdout" @2)' '2' 0
test_code '"0" |@0 "4" |@4 "8" |@8 %@0 (@write "/dev/stdout" @4) (@write "/dev/stdout" @8)' '48' 0
test_code '"0" |@0 "4" |@4 "8" |@8 %@4 (@write "/dev/stdout" @0) (@write "/dev/stdout" @8)' '08' 0
test_code '"0" |@0 "4" |@4 "8" |@8 %@8 (@write "/dev/stdout" @0) (@write "/dev/stdout" @4)' '04' 0
test_code '"0" |@0 "4" |@4 "8" |@8 %@0 %@4 (@write "/dev/stdout" @8)' '8' 0
test_code '"0" |@0 "4" |@4 "8" |@8 %@4 %@0 (@write "/dev/stdout" @8)' '8' 0
test_code '"0" |@0 "8" |@8 "32" |@32 %@0 (@write "/dev/stdout" @8) (@write "/dev/stdout" @32)' '832' 0
test_code '"0" |@0 "8" |@8 "32" |@32 %@8 (@write "/dev/stdout" @0) (@write "/dev/stdout" @32)' '032' 0
test_code '"0" |@0 "8" |@8 "32" |@32 %@32 (@write "/dev/stdout" @0) (@write "/dev/stdout" @8)' '08' 0
test_code '"0" |@0 "8" |@8 "32" |@32 %@0 %@8 (@write "/dev/stdout" @32)' '32' 0
test_code '"0" |@0 "8" |@8 "32" |@32 %@8 %@0 (@write "/dev/stdout" @32)' '32' 0
test_code '"x" |@0 |@1 |@2 |@3 |@4 |@5 |@6 |@7 |@8 |@9 (@write "/dev/stdout" @0) (@write "/dev/stdout" @9)' 'xx' 0
test_code '"x" |@0 |@0 |@0 |@0 |@0 |@0 |@0 |@0 |@0 |@0 (@write "/dev/stdout" @0)' 'x' 0
test_code '"0" |@0 "1" |@1 "2" |@2 "3" |@3 "4" |@4 "5" |@5 "6" |@6 "7" |@7 "8" |@8 "9" |@9 (@write "/dev/stdout" @0) (@write "/dev/stdout" @9)' '09' 0
test_code '0' '' 0
test_code '1' '' 0
test_code '-1' '' 0
test_code '+1' '' 0
test_code '100' '' 0
test_code '-100' '' 0
test_code '+100' '' 0
test_code '2147483647' '' 0
test_code '-2147483647' '' 0
test_code '+2147483647' '' 0
test_code '000000000000000000000000000000000000000000000000002147483647' '' 0
test_code '2147483648' '' 1
test_code '-2147483648' '' 1
test_code '+2147483648' '' 1
test_code '--100' '' 1
test_code '++100' '' 1
test_code '(@write "/dev/stdout" if 1 "pass")' 'pass' 0
test_code '(@write "/dev/stdout" if -1 "pass")' 'pass' 0
test_code '(@write "/dev/stdout" if 100 "pass")' 'pass' 0
test_code '(@write "/dev/stdout" if -100 "pass")' 'pass' 0
test_code '1 |@1' '' 0
test_code '(@write "/dev/stdout" 1)' '' 1
test_code '(@write "/dev/stdout" catch \ (@write "/dev/stdout" 1) /)' 'alien argument' 0
test_code '(@write "/dev/stdout" if 0 "pass")' '' 0
test_code 'if (@add 0 0) (@write "/dev/stdout" "x")' '' 0
test_code 'if (@add 0 1) (@write "/dev/stdout" "x")' 'x' 0
test_code 'if (@add -1 1) (@write "/dev/stdout" "x")' '' 0
test_code 'if (@add 2147483647 0) (@write "/dev/stdout" "x")' 'x' 0
test_code 'if (@add -2147483647 0) (@write "/dev/stdout" "x")' 'x' 0
test_code '(@write "/dev/stdout" catch \ (@add 2147483647 1) /)' 'arithmetic error' 0
test_code '(@write "/dev/stdout" catch \ (@add 1 2147483647) /)' 'arithmetic error' 0
test_code '(@write "/dev/stdout" catch \ (@add 2147483647 2147483647) /)' 'arithmetic error' 0
test_code '(@write "/dev/stdout" catch \ (@add -2147483647 -1) /)' 'arithmetic error' 0
test_code '(@write "/dev/stdout" catch \ (@add -1 -2147483647) /)' 'arithmetic error' 0
test_code '(@write "/dev/stdout" catch \ (@add -2147483647 -2147483647) /)' 'arithmetic error' 0
test_code '(@write "/dev/stdout" catch \ (@add) /)' 'absent argument' 0
test_code '(@write "/dev/stdout" catch \ (@add 0) /)' 'absent argument' 0
test_code '(@write "/dev/stdout" catch \ (@add "" 0) /)' 'alien argument' 0
test_code '(@write "/dev/stdout" catch \ (@add 0 "") /)' 'alien argument' 0
test_code '(@write "/dev/stdout" catch \ (@add @write 0) /)' 'alien argument' 0
test_code '(@write "/dev/stdout" catch \ (@add 0 @write) /)' 'alien argument' 0
test_code 'if (@subtract 0 0) (@write "/dev/stdout" "x")' '' 0
test_code 'if (@subtract 0 -1) (@write "/dev/stdout" "x")' 'x' 0
test_code 'if (@subtract -1 -1) (@write "/dev/stdout" "x")' '' 0
test_code 'if (@subtract 2147483647 0) (@write "/dev/stdout" "x")' 'x' 0
test_code 'if (@subtract -2147483647 0) (@write "/dev/stdout" "x")' 'x' 0
test_code '(@write "/dev/stdout" catch \ (@subtract 2147483647 -1) /)' 'arithmetic error' 0
test_code '(@write "/dev/stdout" catch \ (@subtract -1 2147483647) /)' 'arithmetic error' 0
test_code '(@write "/dev/stdout" catch \ (@subtract 2147483647 -2147483647) /)' 'arithmetic error' 0
test_code '(@write "/dev/stdout" catch \ (@subtract -2147483647 1) /)' 'arithmetic error' 0
test_code '(@write "/dev/stdout" catch \ (@subtract 1 -2147483647) /)' 'arithmetic error' 0
test_code '(@write "/dev/stdout" catch \ (@subtract -2147483647 2147483647) /)' 'arithmetic error' 0
test_code '(@write "/dev/stdout" catch \ (@subtract) /)' 'absent argument' 0
test_code '(@write "/dev/stdout" catch \ (@subtract 0) /)' 'absent argument' 0
test_code '(@write "/dev/stdout" catch \ (@subtract "" 0) /)' 'alien argument' 0
test_code '(@write "/dev/stdout" catch \ (@subtract 0 "") /)' 'alien argument' 0
test_code '(@write "/dev/stdout" catch \ (@subtract @write 0) /)' 'alien argument' 0
test_code '(@write "/dev/stdout" catch \ (@subtract 0 @write) /)' 'alien argument' 0
test_code 'if (@multiply 0 0) (@write "/dev/stdout" "x")' '' 0
test_code 'if (@multiply 1 1) (@write "/dev/stdout" "x")' 'x' 0
test_code 'if (@multiply 1 0) (@write "/dev/stdout" "x")' '' 0
test_code 'if (@multiply 2147483647 1) (@write "/dev/stdout" "x")' 'x' 0
test_code 'if (@multiply -2147483647 1) (@write "/dev/stdout" "x")' 'x' 0
test_code '(@write "/dev/stdout" catch \ (@multiply 2147483647 2) /)' 'arithmetic error' 0
test_code '(@write "/dev/stdout" catch \ (@multiply 2147483647 -2) /)' 'arithmetic error' 0
test_code '(@write "/dev/stdout" catch \ (@multiply -2147483647 2) /)' 'arithmetic error' 0
test_code '(@write "/dev/stdout" catch \ (@multiply -2147483647 -2) /)' 'arithmetic error' 0
test_code '(@write "/dev/stdout" catch \ (@multiply 2 2147483647) /)' 'arithmetic error' 0
test_code '(@write "/dev/stdout" catch \ (@multiply 2 -2147483647) /)' 'arithmetic error' 0
test_code '(@write "/dev/stdout" catch \ (@multiply -2 2147483647) /)' 'arithmetic error' 0
test_code '(@write "/dev/stdout" catch \ (@multiply -2 -2147483647) /)' 'arithmetic error' 0
test_code '(@write "/dev/stdout" catch \ (@multiply 2147483647 2147483647) /)' 'arithmetic error' 0
test_code '(@write "/dev/stdout" catch \ (@multiply 2147483647 -2147483647) /)' 'arithmetic error' 0
test_code '(@write "/dev/stdout" catch \ (@multiply -2147483647 2147483647) /)' 'arithmetic error' 0
test_code '(@write "/dev/stdout" catch \ (@multiply -2147483647 -2147483647) /)' 'arithmetic error' 0
test_code '(@write "/dev/stdout" catch \ (@multiply) /)' 'absent argument' 0
test_code '(@write "/dev/stdout" catch \ (@multiply 0) /)' 'absent argument' 0
test_code '(@write "/dev/stdout" catch \ (@multiply "" 0) /)' 'alien argument' 0
test_code '(@write "/dev/stdout" catch \ (@multiply 0 "") /)' 'alien argument' 0
test_code '(@write "/dev/stdout" catch \ (@multiply @write 0) /)' 'alien argument' 0
test_code '(@write "/dev/stdout" catch \ (@multiply 0 @write) /)' 'alien argument' 0
test_code 'if (@divide 0 1) (@write "/dev/stdout" "x")' '' 0
test_code 'if (@divide 1 1) (@write "/dev/stdout" "x")' 'x' 0
test_code 'if (@divide 1 4) (@write "/dev/stdout" "x")' '' 0
test_code 'if (@divide 2147483647 1) (@write "/dev/stdout" "x")' 'x' 0
test_code 'if (@divide -2147483647 1) (@write "/dev/stdout" "x")' 'x' 0
test_code '(@divide 2147483647 2147483647)' '' 0
test_code '(@divide 2147483647 -2147483647)' '' 0
test_code '(@divide -2147483647 2147483647)' '' 0
test_code '(@divide -2147483647 -2147483647)' '' 0
test_code '(@write "/dev/stdout" catch \ (@divide 1 0) /)' 'arithmetic error' 0
test_code '(@write "/dev/stdout" catch \ (@divide -1 0) /)' 'arithmetic error' 0
test_code '(@write "/dev/stdout" catch \ (@divide) /)' 'absent argument' 0
test_code '(@write "/dev/stdout" catch \ (@divide 0) /)' 'absent argument' 0
test_code '(@write "/dev/stdout" catch \ (@divide "" 0) /)' 'alien argument' 0
test_code '(@write "/dev/stdout" catch \ (@divide 0 "") /)' 'alien argument' 0
test_code '(@write "/dev/stdout" catch \ (@divide @write 0) /)' 'alien argument' 0
test_code '(@write "/dev/stdout" catch \ (@divide 0 @write) /)' 'alien argument' 0
test_code 'if (@modulo 1 1) (@write "/dev/stdout" "x")' '' 0
test_code 'if (@modulo 5 2) (@write "/dev/stdout" "x")' 'x' 0
test_code 'if (@modulo 0 1) (@write "/dev/stdout" "x")' '' 0
test_code '(@modulo 2147483647 2147483647)' '' 0
test_code '(@modulo 2147483647 -2147483647)' '' 0
test_code '(@modulo -2147483647 2147483647)' '' 0
test_code '(@modulo -2147483647 -2147483647)' '' 0
test_code '(@write "/dev/stdout" catch \ (@modulo 1 0) /)' 'arithmetic error' 0
test_code '(@write "/dev/stdout" catch \ (@modulo -1 0) /)' 'arithmetic error' 0
test_code '(@write "/dev/stdout" catch \ (@modulo) /)' 'absent argument' 0
test_code '(@write "/dev/stdout" catch \ (@modulo 0) /)' 'absent argument' 0
test_code '(@write "/dev/stdout" catch \ (@modulo "" 0) /)' 'alien argument' 0
test_code '(@write "/dev/stdout" catch \ (@modulo 0 "") /)' 'alien argument' 0
test_code '(@write "/dev/stdout" catch \ (@modulo @write 0) /)' 'alien argument' 0
test_code '(@write "/dev/stdout" catch \ (@modulo 0 @write) /)' 'alien argument' 0
test_code 'if (@increment -1) (@write "/dev/stdout" "x")' '' 0
test_code 'if (@increment 0) (@write "/dev/stdout" "x")' 'x' 0
test_code 'if (@increment 2147483646) (@write "/dev/stdout" "x")' 'x' 0
test_code '(@write "/dev/stdout" catch \ (@increment 2147483647) /)' 'arithmetic error' 0
test_code '(@write "/dev/stdout" catch \ (@increment) /)' 'absent argument' 0
test_code '(@write "/dev/stdout" catch \ (@increment "") /)' 'alien argument' 0
test_code '(@write "/dev/stdout" catch \ (@increment @write) /)' 'alien argument' 0
test_code 'if (@decrement 1) (@write "/dev/stdout" "x")' '' 0
test_code 'if (@decrement 0) (@write "/dev/stdout" "x")' 'x' 0
test_code 'if (@decrement -2147483646) (@write "/dev/stdout" "x")' 'x' 0
test_code '(@write "/dev/stdout" catch \ (@decrement -2147483647) /)' 'arithmetic error' 0
test_code '(@write "/dev/stdout" catch \ (@decrement) /)' 'absent argument' 0
test_code '(@write "/dev/stdout" catch \ (@decrement "") /)' 'alien argument' 0
test_code '(@write "/dev/stdout" catch \ (@decrement @write) /)' 'alien argument' 0
test_code 'if (@and 0 0) (@write "/dev/stdout" "x")' '' 0
test_code 'if (@and 0 1) (@write "/dev/stdout" "x")' '' 0
test_code 'if (@and 1 0) (@write "/dev/stdout" "x")' '' 0
test_code 'if (@and 1 1) (@write "/dev/stdout" "x")' 'x' 0
test_code 'if (@and "" "") (@write "/dev/stdout" "x")' '' 0
test_code 'if (@and "" "x") (@write "/dev/stdout" "x")' '' 0
test_code 'if (@and "x" "") (@write "/dev/stdout" "x")' '' 0
test_code 'if (@and "x" "x") (@write "/dev/stdout" "x")' 'x' 0
test_code 'if (@and 1 "x") (@write "/dev/stdout" "x")' 'x' 0
test_code '(@write "/dev/stdout" catch \ (@and) /)' 'absent argument' 0
test_code '(@write "/dev/stdout" catch \ (@and 0) /)' 'absent argument' 0
test_code '(@write "/dev/stdout" catch \ (@and "") /)' 'absent argument' 0
test_code 'if (@or 0 0) (@write "/dev/stdout" "x")' '' 0
test_code 'if (@or 0 1) (@write "/dev/stdout" "x")' 'x' 0
test_code 'if (@or 1 0) (@write "/dev/stdout" "x")' 'x' 0
test_code 'if (@or 1 1) (@write "/dev/stdout" "x")' 'x' 0
test_code 'if (@or "" "") (@write "/dev/stdout" "x")' '' 0
test_code 'if (@or "" "x") (@write "/dev/stdout" "x")' 'x' 0
test_code 'if (@or "x" "") (@write "/dev/stdout" "x")' 'x' 0
test_code 'if (@or "x" "x") (@write "/dev/stdout" "x")' 'x' 0
test_code 'if (@or 1 "x") (@write "/dev/stdout" "x")' 'x' 0
test_code '(@write "/dev/stdout" catch \ (@or) /)' 'absent argument' 0
test_code '(@write "/dev/stdout" catch \ (@or 0) /)' 'absent argument' 0
test_code '(@write "/dev/stdout" catch \ (@or "") /)' 'absent argument' 0
test_code 'if (@not 0) (@write "/dev/stdout" "x")' 'x' 0
test_code 'if (@not 1) (@write "/dev/stdout" "x")' '' 0
test_code 'if (@not "") (@write "/dev/stdout" "x")' 'x' 0
test_code 'if (@not "x") (@write "/dev/stdout" "x")' '' 0
test_code '(@write "/dev/stdout" catch \ (@not) /)' 'absent argument' 0
test_code 'if (@precedes 0 100) (@write "/dev/stdout" "x")' 'x' 0
test_code 'if (@precedes 100 0) (@write "/dev/stdout" "x")' '' 0
test_code 'if (@precedes 100 100) (@write "/dev/stdout" "x")' '' 0
test_code 'if (@precedes 0 -100) (@write "/dev/stdout" "x")' '' 0
test_code 'if (@precedes -100 0) (@write "/dev/stdout" "x")' 'x' 0
test_code 'if (@precedes -100 -100) (@write "/dev/stdout" "x")' '' 0
test_code 'if (@precedes "a" "b") (@write "/dev/stdout" "x")' 'x' 0
test_code 'if (@precedes "b" "a") (@write "/dev/stdout" "x")' '' 0
test_code 'if (@precedes "a" "a") (@write "/dev/stdout" "x")' '' 0
test_code 'if (@precedes "A" "a") (@write "/dev/stdout" "x")' 'x' 0
test_code 'if (@precedes "a" "A") (@write "/dev/stdout" "x")' '' 0
test_code 'if (@precedes "A" "A") (@write "/dev/stdout" "x")' '' 0
test_code 'if (@precedes 100 "100") (@write "/dev/stdout" "x")' 'x' 0
test_code 'if (@precedes "100" 100) (@write "/dev/stdout" "x")' '' 0
test_code '(@write "/dev/stdout" catch \ (@precedes @precedes 0) /)' 'alien argument' 0
test_code '(@write "/dev/stdout" catch \ (@precedes 0 @precedes) /)' 'alien argument' 0
test_code '(@write "/dev/stdout" catch \ (@precedes) /)' 'absent argument' 0
test_code '(@write "/dev/stdout" catch \ (@precedes 0) /)' 'absent argument' 0
test_code '(@write "/dev/stdout" catch \ (@precedes "") /)' 'absent argument' 0
test_code 'if (@succeeds 0 100) (@write "/dev/stdout" "x")' '' 0
test_code 'if (@succeeds 100 0) (@write "/dev/stdout" "x")' 'x' 0
test_code 'if (@succeeds 100 100) (@write "/dev/stdout" "x")' '' 0
test_code 'if (@succeeds 0 -100) (@write "/dev/stdout" "x")' 'x' 0
test_code 'if (@succeeds -100 0) (@write "/dev/stdout" "x")' '' 0
test_code 'if (@succeeds -100 -100) (@write "/dev/stdout" "x")' '' 0
test_code 'if (@succeeds "a" "b") (@write "/dev/stdout" "x")' '' 0
test_code 'if (@succeeds "b" "a") (@write "/dev/stdout" "x")' 'x' 0
test_code 'if (@succeeds "a" "a") (@write "/dev/stdout" "x")' '' 0
test_code 'if (@succeeds "A" "a") (@write "/dev/stdout" "x")' '' 0
test_code 'if (@succeeds "a" "A") (@write "/dev/stdout" "x")' 'x' 0
test_code 'if (@succeeds "A" "A") (@write "/dev/stdout" "x")' '' 0
test_code 'if (@succeeds 100 "100") (@write "/dev/stdout" "x")' '' 0
test_code 'if (@succeeds "100" 100) (@write "/dev/stdout" "x")' 'x' 0
test_code '(@write "/dev/stdout" catch \ (@succeeds @succeeds 0) /)' 'alien argument' 0
test_code '(@write "/dev/stdout" catch \ (@succeeds 0 @succeeds) /)' 'alien argument' 0
test_code '(@write "/dev/stdout" catch \ (@succeeds) /)' 'absent argument' 0
test_code '(@write "/dev/stdout" catch \ (@succeeds 0) /)' 'absent argument' 0
test_code '(@write "/dev/stdout" catch \ (@succeeds "") /)' 'absent argument' 0
test_code 'if (@equals 0 100) (@write "/dev/stdout" "x")' '' 0
test_code 'if (@equals 100 0) (@write "/dev/stdout" "x")' '' 0
test_code 'if (@equals 100 100) (@write "/dev/stdout" "x")' 'x' 0
test_code 'if (@equals 0 -100) (@write "/dev/stdout" "x")' '' 0
test_code 'if (@equals -100 0) (@write "/dev/stdout" "x")' '' 0
test_code 'if (@equals -100 -100) (@write "/dev/stdout" "x")' 'x' 0
test_code 'if (@equals "a" "b") (@write "/dev/stdout" "x")' '' 0
test_code 'if (@equals "b" "a") (@write "/dev/stdout" "x")' '' 0
test_code 'if (@equals "a" "a") (@write "/dev/stdout" "x")' 'x' 0
test_code 'if (@equals "A" "a") (@write "/dev/stdout" "x")' '' 0
test_code 'if (@equals "a" "A") (@write "/dev/stdout" "x")' '' 0
test_code 'if (@equals "A" "A") (@write "/dev/stdout" "x")' 'x' 0
test_code 'if (@equals 100 "100") (@write "/dev/stdout" "x")' '' 0
test_code 'if (@equals "100" 100) (@write "/dev/stdout" "x")' '' 0
test_code '(@write "/dev/stdout" catch \ (@equals @equals 0) /)' 'alien argument' 0
test_code '(@write "/dev/stdout" catch \ (@equals 0 @equals) /)' 'alien argument' 0
test_code '(@write "/dev/stdout" catch \ (@equals) /)' 'absent argument' 0
test_code '(@write "/dev/stdout" catch \ (@equals 0) /)' 'absent argument' 0
test_code '(@write "/dev/stdout" catch \ (@equals "") /)' 'absent argument' 0
test_code '(@write, "/dev/stdout", "text")' 'text' 0
test_code '(@write,"/dev/stdout","text")' 'text' 0
test_code 'if,"x",(@write,"/dev/stdout","x")' 'x' 0
test_code 'if (@equals \1,2,3/ 3) (@write "/dev/stdout" "3")' '3' 0
test_code 'if (@equals (@length "") 0) (@write "/dev/stdout" "x")' 'x' 0
test_code 'if (@equals (@length "1") 1) (@write "/dev/stdout" "x")' 'x' 0
test_code 'if (@equals (@length " ") 1) (@write "/dev/stdout" "x")' 'x' 0
test_code 'if (@equals (@length "123") 3) (@write "/dev/stdout" "x")' 'x' 0
test_code '(@write "/dev/stdout" catch \ (@length 0) /)' 'alien argument' 0
test_code '(@write "/dev/stdout" catch \ (@length @length) /)' 'alien argument' 0
test_code '(@write "/dev/stdout" catch \ (@length) /)' 'absent argument' 0
test_code '(@write "/dev/stdout" (@merge "" ""))' '' 0
test_code '(@write "/dev/stdout" (@merge "l" ""))' 'l' 0
test_code '(@write "/dev/stdout" (@merge "" "r"))' 'r' 0
test_code '(@write "/dev/stdout" (@merge "l" "r"))' 'lr' 0
test_code '(@write "/dev/stdout" (@merge "ll" "rrrr"))' 'llrrrr' 0
test_code '(@write "/dev/stdout" catch \ (@merge 0 "") /)' 'alien argument' 0
test_code '(@write "/dev/stdout" catch \ (@merge "" 0) /)' 'alien argument' 0
test_code '(@write "/dev/stdout" catch \ (@merge @merge "") /)' 'alien argument' 0
test_code '(@write "/dev/stdout" catch \ (@merge "" @merge) /)' 'alien argument' 0
test_code '(@write "/dev/stdout" catch \ (@merge) /)' 'absent argument' 0
test_code '(@write "/dev/stdout" catch \ (@merge "") /)' 'absent argument' 0
test_code '(@write "/dev/stdout" (@slice "" 1 1))' '' 0
test_code '(@write "/dev/stdout" (@slice "x" 1 1))' 'x' 0
test_code '(@write "/dev/stdout" (@slice "123" 1 1))' '1' 0
test_code '(@write "/dev/stdout" (@slice "123" 2 2))' '2' 0
test_code '(@write "/dev/stdout" (@slice "123" 3 3))' '3' 0
test_code '(@write "/dev/stdout" (@slice "123" 1 3))' '123' 0
test_code '(@write "/dev/stdout" (@slice "123" 0 3))' '123' 0
test_code '(@write "/dev/stdout" (@slice "123" 1 4))' '123' 0
test_code '(@write "/dev/stdout" (@slice "123" 3 1))' '123' 0
test_code '(@write "/dev/stdout" (@slice "123" 3 0))' '123' 0
test_code '(@write "/dev/stdout" (@slice "123" 4 1))' '123' 0
test_code '(@write "/dev/stdout" catch \ (@slice 0 0 0) /)' 'alien argument' 0
test_code '(@write "/dev/stdout" catch \ (@slice @slice 0 0) /)' 'alien argument' 0
test_code '(@write "/dev/stdout" catch \ (@slice "" "" 0) /)' 'alien argument' 0
test_code '(@write "/dev/stdout" catch \ (@slice "" @slice 0) /)' 'alien argument' 0
test_code '(@write "/dev/stdout" catch \ (@slice "" 0 "") /)' 'alien argument' 0
test_code '(@write "/dev/stdout" catch \ (@slice "" 0 @slice) /)' 'alien argument' 0
test_code '(@write "/dev/stdout" catch \ (@slice) /)' 'absent argument' 0
test_code '(@write "/dev/stdout" catch \ (@slice "") /)' 'absent argument' 0
test_code '(@write "/dev/stdout" catch \ (@slice "" 0) /)' 'absent argument' 0
test_code 'if (@equals (@length "\\\"\t\r\n") 5) (@write "/dev/stdout" "x")' 'x' 0
test_code 'if (@equals (@length "\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f") 16) (@write "/dev/stdout" "x")' 'x' 0
test_code 'if (@equals (@length "\x00\x10\x20\x30\x40\x50\x60\x70\x80\x90\xa0\xb0\xc0\xd0\xe0\xf0") 16) (@write "/dev/stdout" "x")' 'x' 0
test_code 'if (@equals (@length "\x00\x11\x22\x33\x44\x55\x66\x77\x88\x99\xaa\xbb\xcc\xdd\xee\xff") 16) (@write "/dev/stdout" "x")' 'x' 0
test_code '(@write "/dev/stdout" "line 1\nline 2\nline 3")' 'line 1
line 2
line 3' 0
test_code '(@write "/dev/stdout" "line 1\x0aline 2\x0aline 3")' 'line 1
line 2
line 3' 0
test_code '(@write "/dev/stdout" "\x74\x65\x78\x74")' 'text' 0
test_code '(@write "/dev/stdout" "\x7c123\x7c")' '|123|' 0
test_code '(@write "/dev/stdout" "\x7cabc\x7c")' '|abc|' 0
test_code '"text" |@"variable" (@write "/dev/stdout" @"variable")' 'text' 0
test_code '"text" |@"variable" (@write "/dev/stdout" @variable)' 'text' 0
test_code '"text" |@variable (@write "/dev/stdout" @"variable")' 'text' 0
test_code '"text" |@"" (@write "/dev/stdout" @"")' 'text' 0
test_code '"text" |@"\"special\"" (@write "/dev/stdout" @"\"special\"")' 'text' 0
test_code '"text" |@"\"special\"" %@"\"special\"" (@write "/dev/stdout" catch \ @"\"special\"" /)' 'absent variable' 0
test_code '"\xFF"' '' 1
test_code '"\z"' '' 1
test_code '"\x"' '' 1
test_code '"\x0"' '' 1
test_code '"\x0z"' '' 1
test_code '"\xz0"' '' 1
test_code '@"\z"' '' 1
test_code '"text" |@"\z"' '' 1
test_code '%@"\z"' '' 1
test_code '(@write "/dev/stdout" (@type 0))' 'number' 0
test_code '(@write "/dev/stdout" (@type ""))' 'string' 0
test_code '(@write "/dev/stdout" (@type @type))' 'function' 0
test_code '(@write "/dev/stdout" catch \ (@type) /)' 'absent argument' 0
test_code '(@write "/dev/stdout" (@type (@query "TERM")))' 'string' 0
test_code 'if (@not (@equals (@length (@query "TERM")) 0)) (@write "/dev/stdout" "x")' 'x' 0
test_code '(@write "/dev/stdout" catch \ (@query "__absent__") /)' 'absent environment variable' 0
test_code '(@write "/dev/stdout" catch \ (@query 0) /)' 'alien argument' 0
test_code '(@write "/dev/stdout" catch \ (@query @query) /)' 'alien argument' 0
test_code '(@write "/dev/stdout" catch \ (@query) /)' 'absent argument' 0
test_code '(@exit 0)' '' 0
test_code '(@exit 1)' '' 1
test_code '(@exit 127)' '' 127
test_code '(@exit 255)' '' 255
test_code '(@write "/dev/stdout" catch \ (@exit -1) /)' 'damaged argument' 0
test_code '(@write "/dev/stdout" catch \ (@exit 256) /)' 'damaged argument' 0
test_code '(@write "/tmp/lngrd.txt" "text") (@write "/dev/stdout" (@read "/tmp/lngrd.txt" ""))' 'text' 0
test_code '(@write "/tmp/lngrd.txt" "line 1\nline 2\nline 3") (@write "/dev/stdout" (@read "/tmp/lngrd.txt" "\n"))' 'line 1' 0
test_code '(@write "/tmp/lngrd.txt" "line 1\nline 2\nline 3") (@write "/dev/stdout" (@read "/tmp/lngrd.txt" ""))' 'line 1
line 2
line 3' 0
test_code '(@write "/dev/stdout" catch \ (@read "/dev/stdin" 0) /)' 'alien argument' 0
test_code '(@write "/dev/stdout" catch \ (@read "/dev/stdin" @read) /)' 'alien argument' 0
test_code '(@write "/dev/stdout" catch \ (@read) /)' 'absent argument' 0
test_code '(@write "/dev/stdout" catch \ (@read "/dev/stdin") /)' 'absent argument' 0
test_code '(@write "/tmp/lngrd.txt" "text") (@delete "/tmp/lngrd.txt") (@write "/dev/stdout" catch \ (@read "/tmp/lngrd.txt" "") /)' 'absent file' 0
test_code '(@write "/tmp/lngrd.txt" "text") (@delete "/tmp/lngrd.txt") (@write "/dev/stdout" catch \ (@delete "/tmp/lngrd.txt") /)' 'io error' 0
test_code '(@write 1 "text")' 'text' 0
test_code '(@write "/dev/stdout" catch \(@read 1 "") / )' 'io error' 0
test_code '(@write "/dev/stdout" catch \(@read 2 "") / )' 'io error' 0
test_code '(@write "/dev/stdout" catch \(@write 0 "text") / )' 'io error' 0
test_code '(@write "/dev/stdout" catch \(@delete 0) / )' 'io error' 0
test_code '(@write "/dev/stdout" catch \(@delete 1) / )' 'io error' 0
test_code '(@write "/dev/stdout" catch \(@delete 2) / )' 'io error' 0
test_code '(@write "/dev/stdout" catch \(@read 3 "") / )' 'absent file' 0
test_code '(@write "/dev/stdout" catch \(@write 3 "text") / )' 'absent file' 0
test_code '(@write "/dev/stdout" catch \(@delete 3) / )' 'io error' 0

write_status 'PASS' 32
